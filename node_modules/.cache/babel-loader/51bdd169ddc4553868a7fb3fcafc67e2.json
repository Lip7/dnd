{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pbuch\\\\Documents\\\\Master\\\\ASE\\\\project thingy\\\\thingy-client-purple\\\\src\\\\components\\\\StudySession.js\";\nimport React, { Component } from \"react\";\nimport moment from 'moment';\nimport axios from \"axios\";\nimport './StudySession.css';\nimport AreaRechartComponent from \"./AreaRechartComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = \"http://localhost:8080\";\n\nclass StudySession extends Component {\n  constructor() {\n    super();\n\n    this.createSessionHandler = async e => {\n      e.preventDefault();\n      let new_session = {\n        session_id: this.state.session_numbers,\n        session_name: \"Test\",\n        session_stopped: 0,\n        session_breakTime: 0\n      }; // Send creation of session to backend and get the session_start of the backend\n\n      console.log(\"This data will be sent to the backend: \", new_session);\n      await axios.post(baseURL + '/session/', new_session, {}).then(resp => {\n        console.log(\"create Session respond:\", resp);\n        new_session[\"session_start\"] = resp[\"data\"][\"start_time\"];\n\n        if (resp.status !== 200) {\n          throw new Error(`Request failed: ${resp.status}`);\n        }\n      }).catch(err => {\n        console.log(err.response);\n      }); // Add the created session to the list of sessions\n\n      let sessions = [new_session, ...this.state.sessions];\n      this.setState({\n        sessions\n      });\n      let new_session_numbers = this.state.session_numbers + 1;\n      this.setState({\n        session_numbers: new_session_numbers,\n        session_ongoing: 1\n      });\n      console.log(\"State after created session: \", this.state);\n    };\n\n    this.stopSessionHandler = async e => {\n      e.preventDefault();\n      let sessions;\n      await axios.post(baseURL + '/session/stop/', {}).then(resp => {\n        sessions = this.state.sessions.map(session => session.session_id === this.state.session_numbers - 1 ? { ...session,\n          session_end: resp[\"data\"][\"end_time\"],\n          session_stopped: 1\n        } : session);\n        console.log(\"sessions after stopped\", this.state);\n\n        if (resp.status !== 200) {\n          throw new Error(`Request failed: ${resp.status}`);\n        }\n      }).catch(err => {\n        console.log(err.response);\n      });\n      await this.setState({\n        sessions\n      });\n      await this.setState({\n        session_ongoing: 0\n      });\n    };\n\n    this.deleteSessionHandler = e => {\n      e.preventDefault();\n      let sessions = [];\n      this.setState({\n        sessions\n      });\n      axios.delete(baseURL + '/session/', {}).then(resp => {\n        if (resp.status !== 200) {\n          throw new Error(`Request failed: ${resp.status}`);\n        }\n      }).catch(err => {\n        console.log(err.response);\n      });\n    };\n\n    this.state = {\n      session_numbers: 0,\n      // number of sessions per user\n      session_ongoing: 0,\n      // Boolean: is there a current session ongoing? then do not show delete button\n      sessions: [// {\n        //     session_id: integer, // Every session has an unique ID\n        //     session_name: string, // Name of the session\n        //     session_start: date // date and time the session started\n        //     session_end: date // date and time the session stopped\n        //     session_breakTime: date // date and time when the next break is\n        //     session_duration: date // date and time between start and end\n        //     session_stopped: 0 // true if the session was stopped, false if it is still ongoing\n        // }\n      ],\n      currentCO2: \"500\",\n      currentTemp: \"20\",\n      avgCO2: \"550\",\n      avgTemp: \"25\"\n    };\n  } //get current co2 and temp measurements\n\n\n  componentDidMount() {\n    axios.get(baseURL + \"/CO2/\").then(async res => {\n      let data = res.data.data;\n      console.log(\"CO2 data:\", data);\n      await this.setState({\n        currentCO2: data\n      });\n    });\n    axios.get(baseURL + \"/temp/\").then(res => {\n      let data = res.data.data;\n      console.log(\"Temperature data:\", data);\n      this.setState({\n        currentTemp: data\n      });\n    }); // Get all sessions from backend\n\n    axios.get(baseURL + \"/session/\").then(res => {\n      let data = res.data;\n      console.log(\"Session data from backend get all session:\", data);\n      this.setState({\n        sessions: data\n      });\n    });\n  } // Creates Session and increments number of session and ongoing session will be true\n\n\n  render() {\n    // List of all sessions completed\n    let sessionsList = this.state.sessions.map(session => {\n      if (session.session_stopped) return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sessionElem\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Session ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 24\n            }, this), \" \", session.session_id, \" | \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Session Start:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 66\n            }, this), \" \", session.session_start, \" | \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Session End:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 114\n            }, this), \" \", session.session_end]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(AreaRechartComponent, {\n            type: \"Temperature\",\n            data: [{\n              \"name\": \"18:10\",\n              \"Temperature\": 24.1\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AreaRechartComponent, {\n            type: \"CO2\",\n            data: [{\n              \"name\": \"18:10\",\n              \"CO2\": 500\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)\n      }, session.session_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this);\n    }); // List of current active session\n\n    let currentSession = this.state.sessions.map(session => {\n      if (!session.session_stopped) return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Session ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 28\n          }, this), \" \", session.session_id, \" | \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Session Start:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 70\n          }, this), \" \", session.session_start]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this)\n      }, session.session_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"backgroundMeasurements\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"elem\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Current measurements\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"CO2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [this.state.currentCO2, \" CO2e\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Temperature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [this.state.currentTemp, \"\\xB0 C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"elem\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Average measurements\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Average CO2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [this.state.avgCO2, \" CO2e\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Average Temperature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [this.state.avgTemp, \"\\xB0 C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"backgroundStudySession\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"elem\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"STUDY SESSION\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Current study sessions: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 25\n            }, this), this.state.session_ongoing !== 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.createSessionHandler,\n              children: \"Create New Session\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 61\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.stopSessionHandler,\n              children: \"Stop Session\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 31\n            }, this), currentSession, /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 25\n            }, this), this.state.sessions.length > 0 && this.state.sessions[this.state.sessions.length - 1].session_stopped !== 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Past study sessions: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 137\n            }, this), this.state.sessions.length > 0 && !this.state.session_ongoing && this.state.sessions[this.state.sessions.length - 1].session_stopped !== 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.deleteSessionHandler,\n              children: \"Delete all Sessions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 170\n            }, this), sessionsList]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default StudySession;","map":{"version":3,"sources":["C:/Users/pbuch/Documents/Master/ASE/project thingy/thingy-client-purple/src/components/StudySession.js"],"names":["React","Component","moment","axios","AreaRechartComponent","baseURL","StudySession","constructor","createSessionHandler","e","preventDefault","new_session","session_id","state","session_numbers","session_name","session_stopped","session_breakTime","console","log","post","then","resp","status","Error","catch","err","response","sessions","setState","new_session_numbers","session_ongoing","stopSessionHandler","map","session","session_end","deleteSessionHandler","delete","currentCO2","currentTemp","avgCO2","avgTemp","componentDidMount","get","res","data","render","sessionsList","session_start","currentSession","length"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\n\r\nimport moment from 'moment';\r\nimport axios from \"axios\";\r\nimport './StudySession.css';\r\nimport AreaRechartComponent from \"./AreaRechartComponent\";\r\n\r\nconst baseURL = \"http://localhost:8080\"\r\n\r\n\r\nclass StudySession extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            session_numbers: 0, // number of sessions per user\r\n            session_ongoing: 0, // Boolean: is there a current session ongoing? then do not show delete button\r\n\r\n            sessions: [\r\n                // {\r\n                //     session_id: integer, // Every session has an unique ID\r\n                //     session_name: string, // Name of the session\r\n                //     session_start: date // date and time the session started\r\n                //     session_end: date // date and time the session stopped\r\n                //     session_breakTime: date // date and time when the next break is\r\n                //     session_duration: date // date and time between start and end\r\n                //     session_stopped: 0 // true if the session was stopped, false if it is still ongoing\r\n                // }\r\n            ],\r\n\r\n            currentCO2: \"500\",\r\n            currentTemp: \"20\",\r\n            avgCO2:\"550\",\r\n            avgTemp:\"25\",\r\n        }\r\n    }\r\n\r\n    //get current co2 and temp measurements\r\n    componentDidMount() {\r\n        axios.get(baseURL+\"/CO2/\").then(async (res) => {\r\n            let data = res.data.data\r\n            console.log(\"CO2 data:\", data)\r\n            await this.setState({\r\n                currentCO2: data\r\n            })\r\n        })\r\n\r\n        axios.get(baseURL+\"/temp/\").then((res) =>{\r\n            let data = res.data.data\r\n            console.log(\"Temperature data:\",data)\r\n            this.setState({currentTemp: data})\r\n        })\r\n\r\n        // Get all sessions from backend\r\n        axios.get(baseURL+\"/session/\").then((res) =>{\r\n            let data = res.data\r\n            console.log(\"Session data from backend get all session:\",data)\r\n            this.setState({sessions: data})\r\n        })\r\n    }\r\n\r\n    // Creates Session and increments number of session and ongoing session will be true\r\n    createSessionHandler = async (e)=>{\r\n        e.preventDefault()\r\n\r\n        let new_session = {\r\n            session_id: this.state.session_numbers,\r\n            session_name: \"Test\",\r\n            session_stopped: 0,\r\n            session_breakTime: 0,\r\n        }\r\n\r\n        // Send creation of session to backend and get the session_start of the backend\r\n        console.log(\"This data will be sent to the backend: \", new_session)\r\n\r\n        await axios.post(baseURL+'/session/', new_session, {})\r\n             .then(resp => {\r\n                 console.log(\"create Session respond:\", resp)\r\n                 new_session[\"session_start\"] = resp[\"data\"][\"start_time\"]\r\n                 if (resp.status !== 200) {\r\n                     throw new Error(`Request failed: ${resp.status}`);\r\n                 }\r\n             })\r\n             .catch(err => {\r\n                 console.log(err.response);\r\n             })\r\n\r\n        // Add the created session to the list of sessions\r\n        let sessions = [new_session, ...this.state.sessions]\r\n        this.setState({sessions})\r\n        let new_session_numbers = this.state.session_numbers + 1\r\n        this.setState({\r\n            session_numbers: new_session_numbers,\r\n            session_ongoing: 1,\r\n        })\r\n        console.log(\"State after created session: \",this.state)\r\n    }\r\n\r\n    // Stop the current session and get the session_end time from the backend and save it in the last session\r\n    stopSessionHandler = async (e)=>{\r\n        e.preventDefault()\r\n        let sessions\r\n        await axios.post(baseURL+'/session/stop/', {})\r\n            .then(resp => {\r\n                 sessions = this.state.sessions.map(session => (\r\n                    session.session_id===this.state.session_numbers-1 ? {...session, session_end: resp[\"data\"][\"end_time\"], session_stopped: 1}: session\r\n                ))\r\n                console.log(\"sessions after stopped\", this.state)\r\n\r\n                if (resp.status !== 200) {\r\n                    throw new Error(`Request failed: ${resp.status}`);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response);\r\n            })\r\n\r\n        await this.setState({ sessions });\r\n\r\n        await this.setState({\r\n            session_ongoing: 0,\r\n        })\r\n    }\r\n\r\n\r\n    // Deletes all sessions after clicking the delete button\r\n    deleteSessionHandler = (e)=>{\r\n        e.preventDefault()\r\n        let sessions = []\r\n        this.setState({sessions})\r\n        axios.delete(baseURL+'/session/', {})\r\n            .then(resp => {\r\n                if (resp.status !== 200) {\r\n                    throw new Error(`Request failed: ${resp.status}`);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        // List of all sessions completed\r\n        let sessionsList = this.state.sessions.map(session=> {\r\n            if(session.session_stopped)\r\n            return(\r\n                <div key={session.session_id}>\r\n                    <div className={\"sessionElem\"}>\r\n                    <p><b>Session ID:</b> {session.session_id} | <b>Session Start:</b> {session.session_start} | <b>Session End:</b> {session.session_end}</p>\r\n                    {/*| <b>Session Duartion:</b> {session.session_end - session.session_start)}</p>*/}\r\n                        <AreaRechartComponent type={\"Temperature\"} data={[\r\n                            {\r\n                                \"name\": \"18:10\",\r\n                                \"Temperature\": 24.1,\r\n                            }]}></AreaRechartComponent>\r\n                        <AreaRechartComponent type={\"CO2\"} data={[\r\n                            {\r\n                                \"name\": \"18:10\",\r\n                                \"CO2\": 500,\r\n                            }]}></AreaRechartComponent>\r\n                    </div>\r\n        </div>\r\n\r\n            )\r\n        })\r\n        // List of current active session\r\n        let currentSession = this.state.sessions.map(session=> {\r\n            if(!session.session_stopped)\r\n                return(\r\n                    <div key={session.session_id}>\r\n                        <p><b>Session ID:</b> {session.session_id} | <b>Session Start:</b> {session.session_start}</p>\r\n                    </div>\r\n\r\n                )\r\n        })\r\n\r\n            return(\r\n                <div className={\"back\"}>\r\n            <div className={\"background\"}>\r\n\r\n                    <div className={\"backgroundMeasurements\"}>\r\n                        <div className={\"elem\"}>\r\n                            <h1>Current measurements</h1>\r\n                            <h2>CO2</h2>\r\n                            <p>{this.state.currentCO2} CO2e</p>\r\n                            <h2>Temperature</h2>\r\n                            <p>{this.state.currentTemp}° C</p>\r\n                        </div>\r\n                        <div className={\"elem\"}>\r\n                            <h1>Average measurements</h1>\r\n                            <h2>Average CO2</h2>\r\n                            <p>{this.state.avgCO2} CO2e</p>\r\n                            <h2>Average Temperature</h2>\r\n                            <p>{this.state.avgTemp}° C</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={\"backgroundStudySession\"}>\r\n                        <div className={\"elem\"}>\r\n                        <h1>STUDY SESSION</h1>\r\n                        <h2>Current study sessions: </h2>\r\n                        {this.state.session_ongoing !== 1 ? <button onClick={this.createSessionHandler}>Create New Session</button>\r\n                            : <button onClick={this.stopSessionHandler}>Stop Session</button>}{currentSession}\r\n                        <p></p>\r\n\r\n                        {(this.state.sessions.length > 0) && (this.state.sessions[this.state.sessions.length-1].session_stopped!==0) && <h2>Past study sessions: </h2>}\r\n                        {(this.state.sessions.length > 0) && (!this.state.session_ongoing) && (this.state.sessions[this.state.sessions.length-1].session_stopped!==0) && <button onClick={this.deleteSessionHandler}>Delete all Sessions</button>}\r\n\r\n                        {sessionsList}\r\n                    </div>\r\n                        </div>\r\n            </div>\r\n                    </div>\r\n\r\n    )\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default StudySession;"]},"metadata":{},"sourceType":"module"}