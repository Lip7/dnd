{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pbuch\\\\Documents\\\\Master\\\\SecondSemester\\\\MMI\\\\thingy-client-purple\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport \"./styles.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card() {\n  _s();\n\n  const [isDragging, setIsDragging] = useState(false);\n\n  function handleDragStart(e) {\n    setIsDragging(true);\n    const data = JSON.stringify({\n      type: \"card\"\n    });\n    e.dataTransfer.setData(\"text/plain\", data);\n  }\n\n  function handleDragEnd(e) {\n    setIsDragging(false);\n    e.dataTransfer.clearData();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    style: {\n      backgroundColor: isDragging ? \"#fbb\" : \"palegoldenrod\"\n    },\n    draggable: true,\n    onDragStart: handleDragStart,\n    onDragEnd: handleDragEnd,\n    children: \"Card\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"VIDKbg2yfT0CLfTnlFHLO2Fjmb8=\");\n\n_c = Card;\n\nfunction Box({\n  card,\n  moveCard\n}) {\n  _s2();\n\n  const [isOver, setIsOver] = useState(false);\n\n  function handleDragOver(e) {\n    if (e.dataTransfer.types[0] === \"text/plain\") {\n      setIsOver(true);\n      e.preventDefault();\n    }\n  }\n\n  function handleDrop(e) {\n    const dataJSON = e.dataTransfer.getData(\"text/plain\");\n    let data;\n\n    try {\n      data = JSON.parse(dataJSON);\n    } catch {}\n\n    if (data && data.type === \"card\") {\n      moveCard();\n    }\n  }\n\n  function handleDragLeave() {\n    setIsOver(false);\n  } // When the dragged element (card) is over the drop target (box), the background colour of the box changes from grey to blue.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    style: {\n      backgroundColor: isOver ? \"#bbf\" : \"rgba(0,0,0,.12)\"\n    },\n    onDragOver: handleDragOver,\n    onDrop: handleDrop,\n    onDragLeave: handleDragLeave,\n    children: card ? /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }, this) : \"Box\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Box, \"4oVF5x2I2HoAEQHgoT429AK3gvU=\");\n\n_c2 = Box;\nexport default function App() {\n  _s3();\n\n  const [index, setIndex] = useState(1);\n\n  function moveCard(i) {\n    setIndex(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      card: index === 1,\n      moveCard: moveCard.bind(null, 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      card: index === 2,\n      moveCard: moveCard.bind(null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      card: index === 3,\n      moveCard: moveCard.bind(null, 3)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(App, \"ulg2LOBN7MoMGtnTn53zghbgG7c=\");\n\n_c3 = App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"Box\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["C:/Users/pbuch/Documents/Master/SecondSemester/MMI/thingy-client-purple/src/components/Login/Login.js"],"names":["useState","Card","isDragging","setIsDragging","handleDragStart","e","data","JSON","stringify","type","dataTransfer","setData","handleDragEnd","clearData","backgroundColor","Box","card","moveCard","isOver","setIsOver","handleDragOver","types","preventDefault","handleDrop","dataJSON","getData","parse","handleDragLeave","App","index","setIndex","i","bind"],"mappings":";;;;;AAAA,OAAO,cAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,KAAD,CAA5C;;AAEA,WAASI,eAAT,CAAyBC,CAAzB,EAA4B;AACxBF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,UAAMG,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAf,CAAb;AACAJ,IAAAA,CAAC,CAACK,YAAF,CAAeC,OAAf,CAAuB,YAAvB,EAAqCL,IAArC;AACH;;AAED,WAASM,aAAT,CAAuBP,CAAvB,EAA0B;AACtBF,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,IAAAA,CAAC,CAACK,YAAF,CAAeG,SAAf;AACH;;AAED,sBACI;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,KAAK,EAAE;AACHC,MAAAA,eAAe,EAAEZ,UAAU,GAAG,MAAH,GAAY;AADpC,KAFX;AAKI,IAAA,SAAS,MALb;AAMI,IAAA,WAAW,EAAEE,eANjB;AAOI,IAAA,SAAS,EAAEQ,aAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA3BQX,I;;KAAAA,I;;AA6BT,SAASc,GAAT,CAAa;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAb,EAAiC;AAAA;;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,KAAD,CAApC;;AAEA,WAASoB,cAAT,CAAwBf,CAAxB,EAA2B;AACvB,QAAIA,CAAC,CAACK,YAAF,CAAeW,KAAf,CAAqB,CAArB,MAA4B,YAAhC,EAA8C;AAC1CF,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAd,MAAAA,CAAC,CAACiB,cAAF;AACH;AACJ;;AAED,WAASC,UAAT,CAAoBlB,CAApB,EAAuB;AACnB,UAAMmB,QAAQ,GAAGnB,CAAC,CAACK,YAAF,CAAee,OAAf,CAAuB,YAAvB,CAAjB;AACA,QAAInB,IAAJ;;AACA,QAAI;AACAA,MAAAA,IAAI,GAAGC,IAAI,CAACmB,KAAL,CAAWF,QAAX,CAAP;AACH,KAFD,CAEE,MAAM,CAAE;;AACV,QAAIlB,IAAI,IAAIA,IAAI,CAACG,IAAL,KAAc,MAA1B,EAAkC;AAC9BQ,MAAAA,QAAQ;AACX;AACJ;;AAED,WAASU,eAAT,GAA2B;AACvBR,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GAvB4B,CAyB7B;;;AACA,sBACI;AACI,IAAA,SAAS,EAAC,KADd;AAEI,IAAA,KAAK,EAAE;AAAEL,MAAAA,eAAe,EAAEI,MAAM,GAAG,MAAH,GAAY;AAArC,KAFX;AAGI,IAAA,UAAU,EAAEE,cAHhB;AAII,IAAA,MAAM,EAAEG,UAJZ;AAKI,IAAA,WAAW,EAAEI,eALjB;AAAA,cAOKX,IAAI,gBAAG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAc;AAPvB;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;IArCQD,G;;MAAAA,G;AAuCT,eAAe,SAASa,GAAT,GAAe;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB9B,QAAQ,CAAC,CAAD,CAAlC;;AAEA,WAASiB,QAAT,CAAkBc,CAAlB,EAAqB;AACjBD,IAAAA,QAAQ,CAACC,CAAD,CAAR;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,IAAI,EAAEF,KAAK,KAAK,CAArB;AAAwB,MAAA,QAAQ,EAAEZ,QAAQ,CAACe,IAAT,CAAc,IAAd,EAAoB,CAApB;AAAlC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,GAAD;AAAK,MAAA,IAAI,EAAEH,KAAK,KAAK,CAArB;AAAwB,MAAA,QAAQ,EAAEZ,QAAQ,CAACe,IAAT,CAAc,IAAd,EAAoB,CAApB;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,GAAD;AAAK,MAAA,IAAI,EAAEH,KAAK,KAAK,CAArB;AAAwB,MAAA,QAAQ,EAAEZ,QAAQ,CAACe,IAAT,CAAc,IAAd,EAAoB,CAApB;AAAlC;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;IAduBJ,G;;MAAAA,G","sourcesContent":["import \"./styles.css\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Card() {\r\n    const [isDragging, setIsDragging] = useState(false);\r\n\r\n    function handleDragStart(e) {\r\n        setIsDragging(true);\r\n        const data = JSON.stringify({ type: \"card\" });\r\n        e.dataTransfer.setData(\"text/plain\", data);\r\n    }\r\n\r\n    function handleDragEnd(e) {\r\n        setIsDragging(false);\r\n        e.dataTransfer.clearData();\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"card\"\r\n            style={{\r\n                backgroundColor: isDragging ? \"#fbb\" : \"palegoldenrod\"\r\n            }}\r\n            draggable\r\n            onDragStart={handleDragStart}\r\n            onDragEnd={handleDragEnd}\r\n        >\r\n            Card\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Box({ card, moveCard }) {\r\n    const [isOver, setIsOver] = useState(false);\r\n\r\n    function handleDragOver(e) {\r\n        if (e.dataTransfer.types[0] === \"text/plain\") {\r\n            setIsOver(true);\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    function handleDrop(e) {\r\n        const dataJSON = e.dataTransfer.getData(\"text/plain\");\r\n        let data;\r\n        try {\r\n            data = JSON.parse(dataJSON);\r\n        } catch {}\r\n        if (data && data.type === \"card\") {\r\n            moveCard();\r\n        }\r\n    }\r\n\r\n    function handleDragLeave() {\r\n        setIsOver(false);\r\n    }\r\n\r\n    // When the dragged element (card) is over the drop target (box), the background colour of the box changes from grey to blue.\r\n    return (\r\n        <div\r\n            className=\"box\"\r\n            style={{ backgroundColor: isOver ? \"#bbf\" : \"rgba(0,0,0,.12)\" }}\r\n            onDragOver={handleDragOver}\r\n            onDrop={handleDrop}\r\n            onDragLeave={handleDragLeave}\r\n        >\r\n            {card ? <Card /> : \"Box\"}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function App() {\r\n    const [index, setIndex] = useState(1);\r\n\r\n    function moveCard(i) {\r\n        setIndex(i);\r\n    }\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <Box card={index === 1} moveCard={moveCard.bind(null, 1)}></Box>\r\n            <Box card={index === 2} moveCard={moveCard.bind(null, 2)}></Box>\r\n            <Box card={index === 3} moveCard={moveCard.bind(null, 3)}></Box>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}