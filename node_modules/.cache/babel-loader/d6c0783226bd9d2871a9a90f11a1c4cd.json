{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pbuch\\\\Documents\\\\Master\\\\ASE\\\\project thingy\\\\thingy-client-purple\\\\src\\\\components\\\\StudySession.js\";\nimport React, { Component } from \"react\";\nimport moment from 'moment';\n/* calculates time since upload in a human friendly format */\n//const formatedTime = moment.duration(currentDate.diff(props.mangaChaptersUploadTime)).humanize();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StudySession extends Component {\n  constructor() {\n    super();\n\n    this.createSessionHandler = e => {\n      e.preventDefault();\n      const new_session = {\n        session_id: this.state.session_numbers,\n        name: \"\",\n        session_start: moment().format(\"DD-MM-YYYY hh:mm:ss\"),\n        session_end: \"\"\n      };\n      let sessions = [new_session, ...this.state.sessions];\n      this.setState({\n        sessions\n      });\n      let new_session_numbers = this.state.session_numbers + 1;\n      this.setState({\n        session_numbers: new_session_numbers,\n        session_ongoing: 1\n      });\n    };\n\n    this.stopSessionHandler = async e => {\n      e.preventDefault(); // this.setState(prevState => ({\n      //     sessions: {\n      //         ...prevState.sessions,\n      //         [prevState.sessions[this.state.session_numbers-1].session_end]: moment().format(\"DD-MM-YYYY hh:mm:ss\"),\n      //     },\n      // }));\n\n      let newSessions = this.state.sessions.map(session => session.session_id === this.state.session_numbers - 1 ? { ...session,\n        session_end: \"hi\"\n      } : session);\n      await this.setState({\n        newSessions\n      });\n      this.setState({\n        session_ongoing: 0\n      });\n      console.log(this.state);\n    };\n\n    this.deleteSessionHandler = e => {\n      e.preventDefault();\n      let sessions = [];\n      this.setState({\n        sessions\n      });\n    };\n\n    this.state = {\n      session_numbers: 0,\n      session_ongoing: 0,\n      sessions: [// {\n        //     session_id: 1,\n        //     session_name: \"Thanks for supporting FairManga ! \",\n        //     session_start: moment(),\n        //     session_end: \"\"\n        // }\n      ]\n    };\n  } // Creates Session and increments number of session and ongoing session will be true\n\n\n  render() {\n    let sessionsList = this.state.sessions.map(session => {\n      // if(session.session_end != \"\")\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Session ID: \", session.session_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Session Start: \", session.session_start]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Session End: \", session.session_end]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, session.session_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this);\n    });\n    let currentSession = this.state.sessions.map(session => {\n      if (session.session_end == \"\") return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Session ID: \", session.session_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Session Start: \", session.session_start]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Session End: \", session.session_end]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)]\n      }, session.session_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"STUDY SESSION\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), this.state.session_ongoing != 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.createSessionHandler,\n        children: \"Create New Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 52\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.stopSessionHandler,\n        children: \"Stop Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 23\n      }, this), currentSession, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Past study sessions: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), sessionsList, /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Delete all Sessions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default StudySession;","map":{"version":3,"sources":["C:/Users/pbuch/Documents/Master/ASE/project thingy/thingy-client-purple/src/components/StudySession.js"],"names":["React","Component","moment","StudySession","constructor","createSessionHandler","e","preventDefault","new_session","session_id","state","session_numbers","name","session_start","format","session_end","sessions","setState","new_session_numbers","session_ongoing","stopSessionHandler","newSessions","map","session","console","log","deleteSessionHandler","render","sessionsList","currentSession"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\n\r\nimport moment from 'moment';\r\n\r\n/* calculates time since upload in a human friendly format */\r\n//const formatedTime = moment.duration(currentDate.diff(props.mangaChaptersUploadTime)).humanize();\r\n\r\nclass StudySession extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            session_numbers: 0,\r\n            session_ongoing: 0,\r\n\r\n            sessions: [\r\n                // {\r\n                //     session_id: 1,\r\n                //     session_name: \"Thanks for supporting FairManga ! \",\r\n                //     session_start: moment(),\r\n                //     session_end: \"\"\r\n                // }\r\n            ]\r\n        }\r\n    }\r\n    // Creates Session and increments number of session and ongoing session will be true\r\n    createSessionHandler = (e)=>{\r\n        e.preventDefault()\r\n\r\n        const new_session = {\r\n            session_id: this.state.session_numbers,\r\n            name: \"\",\r\n            session_start: moment().format(\"DD-MM-YYYY hh:mm:ss\"),\r\n            session_end: \"\"\r\n        }\r\n        let sessions = [new_session, ...this.state.sessions]\r\n        this.setState({sessions})\r\n        let new_session_numbers = this.state.session_numbers + 1\r\n        this.setState({\r\n            session_numbers: new_session_numbers,\r\n            session_ongoing: 1,\r\n        })\r\n    }\r\n\r\n    stopSessionHandler = async (e)=>{\r\n        e.preventDefault()\r\n\r\n        // this.setState(prevState => ({\r\n        //     sessions: {\r\n        //         ...prevState.sessions,\r\n        //         [prevState.sessions[this.state.session_numbers-1].session_end]: moment().format(\"DD-MM-YYYY hh:mm:ss\"),\r\n        //     },\r\n        // }));\r\n        let newSessions = this.state.sessions.map(session => (\r\n            session.session_id===this.state.session_numbers-1 ? {...session, session_end: \"hi\"}: session\r\n        ))\r\n        await this.setState({ newSessions });\r\n\r\n        this.setState({\r\n            session_ongoing: 0,\r\n        })\r\n        console.log(this.state)\r\n    }\r\n\r\n\r\n    // Deletes all mangas in the favorite State after clicking the delete button\r\n    deleteSessionHandler = (e)=>{\r\n        e.preventDefault()\r\n        let sessions = []\r\n        this.setState({sessions})\r\n    }\r\n\r\n    render() {\r\n        let sessionsList = this.state.sessions.map(session=> {\r\n            // if(session.session_end != \"\")\r\n            return(\r\n                <div key={session.session_id}>\r\n                    <h1>Session ID: {session.session_id}</h1>\r\n\r\n                    <h1>Session Start: {session.session_start}</h1>\r\n\r\n                    <h1>Session End: {session.session_end}</h1>\r\n                </div>\r\n\r\n            )\r\n        })\r\n\r\n        let currentSession = this.state.sessions.map(session=> {\r\n            if(session.session_end == \"\")\r\n                return(\r\n                    <div key={session.session_id}>\r\n                        <h1>Session ID: {session.session_id}</h1>\r\n\r\n                        <h1>Session Start: {session.session_start}</h1>\r\n\r\n                        <h1>Session End: {session.session_end}</h1>\r\n                    </div>\r\n\r\n                )\r\n        })\r\n\r\n            return(\r\n            <div>\r\n                <h1>STUDY SESSION</h1>\r\n                {this.state.session_ongoing != 1 ? <button onClick={this.createSessionHandler}>Create New Session</button>\r\n                    : <button onClick={this.stopSessionHandler}>Stop Session</button>}{currentSession}\r\n\r\n\r\n                <p>Past study sessions: </p>\r\n                {sessionsList}\r\n                <button>Delete all Sessions</button>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default StudySession;"]},"metadata":{},"sourceType":"module"}