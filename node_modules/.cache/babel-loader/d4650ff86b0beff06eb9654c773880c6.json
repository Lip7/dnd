{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pbuch\\\\Documents\\\\Master\\\\ASE\\\\project thingy\\\\thingy-client-purple\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from \"react\";\nimport Box from '@mui/material/Box';\nimport Slider from '@mui/material/Slider';\nimport RangeSlider from \"./RangeSlider\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.handleChangeTemp = newValue => {\n      this.setState({\n        minTemp: newValue[0],\n        maxTemp: newValue[1]\n      });\n      console.log(this.state);\n    };\n\n    this.onInputchange = event => {\n      event.preventDefault();\n      console.log(\"event:\", event.target.name);\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(\"on input change:\", this.state);\n    };\n\n    this.createSessionHandler = async e => {\n      e.preventDefault();\n      let new_session = {\n        session_id: this.state.sessions.length,\n        session_name: this.state.currentTitle,\n        session_stopped: 0,\n        session_breakTime: 0\n      }; // Send creation of session to backend and get the session_start of the backend\n\n      console.log(\"This data will be sent to the backend: \", new_session);\n      await axios.post(baseURL + '/session/', new_session, {}).then(resp => {\n        console.log(\"create Session respond:\", resp);\n        new_session[\"session_start\"] = resp[\"data\"][\"session_start\"];\n\n        if (resp.status !== 200) {\n          throw new Error(`Request failed: ${resp.status}`);\n        }\n      }).catch(err => {\n        console.log(err.response);\n      }); // Add the created session to the list of sessions\n\n      let sessions = [new_session, ...this.state.sessions];\n      await this.setState({\n        sessions\n      });\n      this.setState({\n        session_ongoing: 1\n      });\n      console.log(\"State after created session: \", this.state);\n    };\n\n    this.state = {\n      minTemp: 20,\n      maxTemp: 37,\n      set_break_every: 7\n    };\n  } // This function will be sent to the child class RangeSlider to get the new changed minmax temperatures which will be saved in the state\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Minimum and Maximum Temperature:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select the desired interval for your temperature in your room and get alarmed when it gets lower or higher:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            margin: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(RangeSlider, {\n            handleChangeTemp: this.handleChangeTemp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Break After X Minutes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"After how many minutes should you be reminded to take a break\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: 0,\n          max: 1440 //default = {200}\n          ,\n          placeholder: this.state.set_break_every //\"in minutes\"\n          ,\n          name: \"set_break_every\",\n          onChange: this.onInputchange,\n          value: this.state.set_break_every,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.createSessionHandler,\n        children: \"Save Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/pbuch/Documents/Master/ASE/project thingy/thingy-client-purple/src/components/Home.js"],"names":["React","Component","Box","Slider","RangeSlider","axios","Home","constructor","handleChangeTemp","newValue","setState","minTemp","maxTemp","console","log","state","onInputchange","event","preventDefault","target","name","value","createSessionHandler","e","new_session","session_id","sessions","length","session_name","currentTitle","session_stopped","session_breakTime","post","baseURL","then","resp","status","Error","catch","err","response","session_ongoing","set_break_every","render","display","justifyContent","alignItems","margin"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Slider from '@mui/material/Slider';\r\nimport RangeSlider from \"./RangeSlider\";\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            minTemp: 20,\r\n            maxTemp: 37,\r\n            set_break_every: 7,\r\n        }\r\n    }\r\n\r\n    // This function will be sent to the child class RangeSlider to get the new changed minmax temperatures which will be saved in the state\r\n    handleChangeTemp = (newValue) => {\r\n        this.setState({\r\n            minTemp: newValue[0],\r\n            maxTemp: newValue[1],\r\n        })\r\n        console.log(this.state)\r\n    };\r\n\r\n    // Gets the input of the user for the minutes of the next break\r\n    onInputchange = event => {\r\n        event.preventDefault()\r\n        console.log(\"event:\",event.target.name)\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n        console.log(\"on input change:\",this.state)\r\n    }\r\n\r\n    //\r\n    createSessionHandler = async (e)=>{\r\n        e.preventDefault()\r\n\r\n        let new_session = {\r\n            session_id: this.state.sessions.length,\r\n            session_name: this.state.currentTitle,\r\n            session_stopped: 0,\r\n            session_breakTime: 0,\r\n        }\r\n\r\n        // Send creation of session to backend and get the session_start of the backend\r\n        console.log(\"This data will be sent to the backend: \", new_session)\r\n\r\n        await axios.post(baseURL+'/session/', new_session, {})\r\n            .then(resp => {\r\n                console.log(\"create Session respond:\", resp)\r\n                new_session[\"session_start\"] = resp[\"data\"][\"session_start\"]\r\n                if (resp.status !== 200) {\r\n                    throw new Error(`Request failed: ${resp.status}`);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response);\r\n            })\r\n\r\n        // Add the created session to the list of sessions\r\n        let sessions = [new_session, ...this.state.sessions]\r\n        await this.setState({sessions})\r\n        this.setState({\r\n            session_ongoing: 1,\r\n        })\r\n        console.log(\"State after created session: \",this.state)\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <h1>Settings</h1>\r\n                <h2>Minimum and Maximum Temperature:</h2>\r\n                <div >\r\n                    <p>Select the desired interval for your temperature in your room and get alarmed when it gets lower or higher:</p>\r\n                    <div style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        margin: 20 }}>\r\n                        <RangeSlider\r\n                            handleChangeTemp = {this.handleChangeTemp}\r\n                        >\r\n                        </RangeSlider>\r\n                    </div>\r\n                    <h2>Break After X Minutes:</h2>\r\n                    <p>After how many minutes should you be reminded to take a break</p>\r\n                    <input\r\n                        type=\"number\"\r\n                        min={0}\r\n                        max={1440}\r\n                        //default = {200}\r\n                        placeholder= {this.state.set_break_every}//\"in minutes\"\r\n                        name=\"set_break_every\"\r\n                        onChange={this.onInputchange}\r\n                        value={this.state.set_break_every}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button onClick={this.createSessionHandler}>Save Settings</button>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}