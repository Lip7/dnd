{"ast":null,"code":"import axios from \"axios\";\nconst baseURL = \"http://localhost:8080/\";\n\nclass Authservice {\n  //login the user with its password\n  login(user, secret) {\n    return axios.post(baseURL + \"token/\", {\n      user,\n      secret\n    }).then(response => {\n      if (response.data.error === 'invalid_client') {\n        console.log(\"error\");\n        throw Error(\"Username or password is wrong, try again!\");\n      } else {\n        //when receiving token, save it\n        if (response.data.access_token) {\n          localStorage.setItem('user', JSON.stringify(response.data));\n        }\n\n        return response.data;\n      }\n    });\n  } //logout the user\n\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  } //signup a new user\n\n\n  async register(user, secret) {\n    let users = {\n      user: user,\n      secret: secret\n    }; //add ne user to db\n\n    return await axios.post(baseURL + \"users/add/\", users, {}).then(resp => {\n      if (resp.data.error === 'User_exists') {\n        console.log(\"error\");\n        throw Error(\"Username already exists, try another one.\");\n      } else {\n        return resp;\n      }\n    });\n  } //get the current user\n\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n}\n\nexport default new Authservice();","map":{"version":3,"sources":["C:/Users/pbuch/Documents/Master/SecondSemester/MMI/folders/src/components/services/Authservice.js"],"names":["axios","baseURL","Authservice","login","user","secret","post","then","response","data","error","console","log","Error","access_token","localStorage","setItem","JSON","stringify","logout","removeItem","register","users","resp","getCurrentUser","parse","getItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,wBAAhB;;AAGA,MAAMC,WAAN,CAAkB;AAEd;AACAC,EAAAA,KAAK,CAACC,IAAD,EAAOC,MAAP,EAAe;AAChB,WAAOL,KAAK,CACPM,IADE,CACGL,OAAO,GAAG,QADb,EACuB;AACtBG,MAAAA,IADsB;AAEtBC,MAAAA;AAFsB,KADvB,EAKFE,IALE,CAKGC,QAAQ,IAAI;AACd,UAAGA,QAAQ,CAACC,IAAT,CAAcC,KAAd,KAAsB,gBAAzB,EAA0C;AACtCC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,cAAMC,KAAK,CAAC,2CAAD,CAAX;AACH,OAHD,MAGK;AACD;AACA,YAAIL,QAAQ,CAACC,IAAT,CAAcK,YAAlB,EAAgC;AAC5BC,UAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeV,QAAQ,CAACC,IAAxB,CAA7B;AACH;;AAED,eAAOD,QAAQ,CAACC,IAAhB;AACH;AACJ,KAjBE,CAAP;AAkBH,GAtBa,CAwBd;;;AACAU,EAAAA,MAAM,GAAG;AACLJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,MAAxB;AACH,GA3Ba,CA8Bd;;;AACc,QAARC,QAAQ,CAACjB,IAAD,EAAOC,MAAP,EAAe;AACzB,QAAIiB,KAAK,GAAG;AACRlB,MAAAA,IAAI,EAAEA,IADE;AAERC,MAAAA,MAAM,EAAEA;AAFA,KAAZ,CADyB,CAMzB;;AACA,WAAO,MAAML,KAAK,CACbM,IADQ,CACHL,OAAO,GAAG,YADP,EACqBqB,KADrB,EAC4B,EAD5B,EAERf,IAFQ,CAEHgB,IAAI,IAAE;AACR,UAAGA,IAAI,CAACd,IAAL,CAAUC,KAAV,KAAkB,aAArB,EAAmC;AAC/BC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,cAAMC,KAAK,CAAC,2CAAD,CAAX;AACH,OAHD,MAGK;AACD,eAAOU,IAAP;AAEH;AACR,KAVY,CAAb;AAYH,GAlDa,CAoDd;;;AACAC,EAAAA,cAAc,GAAG;AACb,WAAOP,IAAI,CAACQ,KAAL,CAAWV,YAAY,CAACW,OAAb,CAAqB,MAArB,CAAX,CAAP;AAEH;;AAxDa;;AA2DlB,eAAe,IAAIxB,WAAJ,EAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseURL = \"http://localhost:8080/\"\r\n\r\n\r\nclass Authservice {\r\n\r\n    //login the user with its password\r\n    login(user, secret) {\r\n        return axios\r\n            .post(baseURL + \"token/\", {\r\n                user,\r\n                secret\r\n            })\r\n            .then(response => {\r\n                if(response.data.error==='invalid_client'){\r\n                    console.log(\"error\")\r\n                    throw Error(\"Username or password is wrong, try again!\")\r\n                }else{\r\n                    //when receiving token, save it\r\n                    if (response.data.access_token) {\r\n                        localStorage.setItem('user', JSON.stringify(response.data));\r\n                    }\r\n\r\n                    return response.data;\r\n                }\r\n            });\r\n    }\r\n\r\n    //logout the user\r\n    logout() {\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n\r\n    //signup a new user\r\n    async register(user, secret) {\r\n        let users = {\r\n            user: user,\r\n            secret: secret,\r\n        }\r\n\r\n        //add ne user to db\r\n        return await axios\r\n            .post(baseURL + \"users/add/\", users, {})\r\n            .then(resp=>{\r\n                if(resp.data.error==='User_exists'){\r\n                    console.log(\"error\")\r\n                    throw Error(\"Username already exists, try another one.\")\r\n                }else{\r\n                    return resp;\r\n\r\n                }\r\n        })\r\n\r\n    }\r\n\r\n    //get the current user\r\n    getCurrentUser() {\r\n        return JSON.parse(localStorage.getItem('user'));\r\n\r\n    }\r\n}\r\n\r\nexport default new Authservice();"]},"metadata":{},"sourceType":"module"}