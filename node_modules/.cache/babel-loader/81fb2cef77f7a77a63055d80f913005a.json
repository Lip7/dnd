{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pbuch\\\\Documents\\\\Master\\\\SecondSemester\\\\MMI\\\\folders\\\\src\\\\components\\\\Signup\\\\Signup.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport style from \"./Signup.css\";\nimport AuthService from \"../services/Authservice\";\nimport { Link } from \"react-router-dom\"; //to make fields required\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n}; //verify username\n\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"The username must be between 3 and 20 characters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n}; //verify password\n\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"The password must be between 6 and 40 characters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  } //change username in state\n\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  } //change password in state\n\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  } //when clicking on signup\n\n\n  handleRegister(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(this.state.username, this.state.password).then(response => {\n        this.setState({\n          message: response.data.message,\n          successful: true\n        }); //login right after signup\n\n        AuthService.login(this.state.username, this.state.password).then(() => {\n          this.props.history.push(\"/studysession\");\n          window.location.reload();\n        }, error => {\n          const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        });\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        this.setState({\n          successful: false,\n          message: resMessage\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textArea1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textArea2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card card-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"LoginTitle\",\n              children: \"Signup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: this.handleRegister,\n              ref: c => {\n                this.form = c;\n              },\n              children: [!this.state.successful && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"username\",\n                    children: \"Username\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"username\",\n                    value: this.state.username,\n                    onChange: this.onChangeUsername,\n                    validations: [required, vusername]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"password\",\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"password\",\n                    className: \"form-control\",\n                    name: \"password\",\n                    value: this.state.password,\n                    onChange: this.onChangePassword,\n                    validations: [required, vpassword]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"button\",\n                    children: \"Sign Up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: this.state.successful ? \"alert alert-success\" : \"alert alert-danger\",\n                  role: \"alert\",\n                  children: this.state.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n                style: {\n                  display: \"none\"\n                },\n                ref: c => {\n                  this.checkBtn = c;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-2\",\n              children: [\" Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 76\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/pbuch/Documents/Master/SecondSemester/MMI/folders/src/components/Signup/Signup.js"],"names":["React","Component","Form","Input","CheckButton","style","AuthService","Link","required","value","vusername","length","vpassword","Register","constructor","props","handleRegister","bind","onChangeUsername","onChangePassword","state","username","email","password","successful","message","e","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","register","then","response","data","login","history","push","window","location","reload","error","resMessage","toString","loading","render","c","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport style from \"./Signup.css\"\r\nimport AuthService from \"../services/Authservice\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n//to make fields required\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n//verify username\r\nconst vusername = value => {\r\n    if (value.length < 3 || value.length > 20) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The username must be between 3 and 20 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n//verify password\r\nconst vpassword = value => {\r\n    if (value.length < 6 || value.length > 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The password must be between 6 and 40 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default class Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleRegister = this.handleRegister.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            successful: false,\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n    //change username in state\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    //change password in state\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    //when clicking on signup\r\n    handleRegister(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            message: \"\",\r\n            successful: false\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            AuthService.register(\r\n                this.state.username,\r\n                this.state.password\r\n            ).then(\r\n                response => {\r\n                    this.setState({\r\n                        message: response.data.message,\r\n                        successful: true\r\n                    });\r\n\r\n                    //login right after signup\r\n                    AuthService.login(this.state.username, this.state.password).then(\r\n                        () => {\r\n                            this.props.history.push(\"/studysession\");\r\n                            window.location.reload();\r\n                        },\r\n                        error => {\r\n                            const resMessage =\r\n                                (error.response &&\r\n                                    error.response.data &&\r\n                                    error.response.data.message) ||\r\n                                error.message ||\r\n                                error.toString();\r\n\r\n                            this.setState({\r\n                                loading: false,\r\n                                message: resMessage\r\n                            });\r\n                        }\r\n                    );\r\n                },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        successful: false,\r\n                        message: resMessage\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"textArea1\"}>\r\n                <div className={\"textArea2\"}>\r\n                    <div className=\"col-md-12\">\r\n                         <div className=\"card card-container\">\r\n                             <h1 className={\"LoginTitle\"}>Signup</h1>\r\n\r\n                            <Form\r\n                                onSubmit={this.handleRegister}\r\n                                ref={c => {\r\n                                    this.form = c;\r\n                                }}\r\n                            >\r\n                                {!this.state.successful && (\r\n                                    <div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"username\">Username</label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"username\"\r\n                                                value={this.state.username}\r\n                                                onChange={this.onChangeUsername}\r\n                                                validations={[required, vusername]}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"password\">Password</label>\r\n                                            <Input\r\n                                                type=\"password\"\r\n                                                className=\"form-control\"\r\n                                                name=\"password\"\r\n                                                value={this.state.password}\r\n                                                onChange={this.onChangePassword}\r\n                                                validations={[required, vpassword]}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <button className=\"button\">Sign Up</button>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n\r\n                                {this.state.message && (\r\n                                    <div className=\"form-group\">\r\n                                        <div\r\n                                            className={\r\n                                                this.state.successful\r\n                                                    ? \"alert alert-success\"\r\n                                                    : \"alert alert-danger\"\r\n                                            }\r\n                                            role=\"alert\"\r\n                                        >\r\n                                            {this.state.message}\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                <CheckButton\r\n                                    style={{ display: \"none\" }}\r\n                                    ref={c => {\r\n                                        this.checkBtn = c;\r\n                                    }}\r\n                                />\r\n                            </Form>\r\n                             <p className=\"mt-2\"> Already have an account? <Link to=\"/login\">Login</Link></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}