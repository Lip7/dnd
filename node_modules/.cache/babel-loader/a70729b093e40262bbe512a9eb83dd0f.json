{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pbuch\\\\Documents\\\\Master\\\\ASE\\\\project thingy\\\\thingy-client-purple\\\\src\\\\components\\\\RangeSlider.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Slider from '@mui/material/Slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction valuetext(value) {\n  return `${value}°C`;\n}\n\nexport default function RangeSlider(props) {\n  _s();\n\n  const [value, setValue] = React.useState([20, 37]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue); // send to parent class Settings the desired and updated min and max temp as array\n\n    props.handleChangeTemp(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: 300\n    },\n    children: /*#__PURE__*/_jsxDEV(Slider, {\n      getAriaLabel: () => 'Temperature range',\n      value: value,\n      onChange: handleChange,\n      valueLabelDisplay: \"auto\",\n      getAriaValueText: valuetext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RangeSlider, \"jrbLu7ckMoQurj76J3xyL5icvIc=\");\n\n_c = RangeSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"RangeSlider\");","map":{"version":3,"sources":["C:/Users/pbuch/Documents/Master/ASE/project thingy/thingy-client-purple/src/components/RangeSlider.js"],"names":["React","Box","Slider","valuetext","value","RangeSlider","props","setValue","useState","handleChange","event","newValue","handleChangeTemp","width"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,SAAQ,GAAEA,KAAM,IAAhB;AACH;;AAED,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACvC,QAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBP,KAAK,CAACQ,QAAN,CAAe,CAAC,EAAD,EAAK,EAAL,CAAf,CAA1B;;AAEA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtCJ,IAAAA,QAAQ,CAACI,QAAD,CAAR,CADsC,CAGtC;;AACAL,IAAAA,KAAK,CAACM,gBAAN,CAAuBD,QAAvB;AACH,GALD;;AAOA,sBACI,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KAAT;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,YAAY,EAAE,MAAM,mBADxB;AAEI,MAAA,KAAK,EAAET,KAFX;AAGI,MAAA,QAAQ,EAAEK,YAHd;AAII,MAAA,iBAAiB,EAAC,MAJtB;AAKI,MAAA,gBAAgB,EAAEN;AALtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GArBuBE,W;;KAAAA,W","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Slider from '@mui/material/Slider';\r\n\r\nfunction valuetext(value) {\r\n    return `${value}°C`;\r\n}\r\n\r\nexport default function RangeSlider(props) {\r\n    const [value, setValue] = React.useState([20, 37]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n\r\n        // send to parent class Settings the desired and updated min and max temp as array\r\n        props.handleChangeTemp(newValue)\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: 300 }}>\r\n            <Slider\r\n                getAriaLabel={() => 'Temperature range'}\r\n                value={value}\r\n                onChange={handleChange}\r\n                valueLabelDisplay=\"auto\"\r\n                getAriaValueText={valuetext}\r\n            />\r\n        </Box>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}