{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pbuch\\\\Documents\\\\Master\\\\ASE\\\\project thingy\\\\thingy-client-purple\\\\src\\\\components\\\\StudySession.js\";\nimport React, { Component } from \"react\";\nimport moment from 'moment';\n/* calculates time since upload in a human friendly format */\n//const formatedTime = moment.duration(currentDate.diff(props.mangaChaptersUploadTime)).humanize();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StudySession extends Component {\n  constructor() {\n    super();\n\n    this.createSessionHandler = e => {\n      e.preventDefault();\n      const new_session = {\n        session_id: this.state.session_numbers,\n        name: \"\",\n        session_start: moment().format(\"DD-MM-YYYY hh:mm:ss A\"),\n        session_stopped: 0\n      };\n      let sessions = [new_session, ...this.state.sessions];\n      this.setState({\n        sessions\n      });\n      let new_session_numbers = this.state.session_numbers + 1;\n      this.setState({\n        session_numbers: new_session_numbers,\n        session_ongoing: 1\n      });\n    };\n\n    this.stopSessionHandler = async e => {\n      e.preventDefault(); // this.setState(prevState => ({\n      //     sessions: {\n      //         ...prevState.sessions,\n      //         [prevState.sessions[this.state.session_numbers-1].session_end]: moment().format(\"DD-MM-YYYY hh:mm:ss\"),\n      //     },\n      // }));\n\n      let sessions = this.state.sessions.map(session => session.session_id === this.state.session_numbers - 1 ? { ...session,\n        session_end: moment().format(\"DD-MM-YYYY hh:mm:ss A\"),\n        session_stopped: 1\n      } : session);\n      await this.setState({\n        sessions\n      });\n      await this.setState({\n        session_ongoing: 0\n      });\n      console.log(this.state);\n    };\n\n    this.deleteSessionHandler = e => {\n      e.preventDefault();\n      let sessions = [];\n      this.setState({\n        sessions\n      });\n    };\n\n    this.state = {\n      session_numbers: 0,\n      session_ongoing: 0,\n      sessions: [// {\n        //     session_id: 1,\n        //     session_name: \"Thanks for supporting FairManga ! \",\n        //     session_start: moment(),\n        //     session_end: \"\"\n        // }\n      ]\n    };\n  } // Creates Session and increments number of session and ongoing session will be true\n\n\n  render() {\n    // List of all sessions completed\n    let sessionsList = this.state.sessions.map(session => {\n      if (session.session_stopped) return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Session ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 24\n          }, this), \" \", session.session_id, \" | \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Session Start:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 66\n          }, this), \" \", session.session_start, \" | \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Session End:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 114\n          }, this), \" \", session.session_end, \"| \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Session Duartion:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 27\n          }, this), \" \", session.session_end.diff(session.session_start).humanize()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, session.session_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this);\n    });\n    let currentSession = this.state.sessions.map(session => {\n      if (!session.session_stopped) return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Session ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 28\n          }, this), \" \", session.session_id, \" | \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Session Start:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 70\n          }, this), \" \", session.session_start]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)\n      }, session.session_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"STUDY SESSION\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current study sessions: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), this.state.session_ongoing != 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.createSessionHandler,\n        children: \"Create New Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 52\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.stopSessionHandler,\n        children: \"Stop Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 23\n      }, this), currentSession, /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), this.state.sessions.length > 0 && this.state.sessions[this.state.sessions.length - 1].session_stopped != 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Past study sessions: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 128\n      }, this), this.state.sessions.length > 0 && this.state.sessions[this.state.sessions.length - 1].session_stopped != 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.deleteSessionHandler,\n        children: \"Delete all Sessions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 128\n      }, this), sessionsList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default StudySession;","map":{"version":3,"sources":["C:/Users/pbuch/Documents/Master/ASE/project thingy/thingy-client-purple/src/components/StudySession.js"],"names":["React","Component","moment","StudySession","constructor","createSessionHandler","e","preventDefault","new_session","session_id","state","session_numbers","name","session_start","format","session_stopped","sessions","setState","new_session_numbers","session_ongoing","stopSessionHandler","map","session","session_end","console","log","deleteSessionHandler","render","sessionsList","diff","humanize","currentSession","length"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\n\r\nimport moment from 'moment';\r\n\r\n/* calculates time since upload in a human friendly format */\r\n//const formatedTime = moment.duration(currentDate.diff(props.mangaChaptersUploadTime)).humanize();\r\n\r\nclass StudySession extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            session_numbers: 0,\r\n            session_ongoing: 0,\r\n\r\n            sessions: [\r\n                // {\r\n                //     session_id: 1,\r\n                //     session_name: \"Thanks for supporting FairManga ! \",\r\n                //     session_start: moment(),\r\n                //     session_end: \"\"\r\n                // }\r\n            ]\r\n        }\r\n    }\r\n    // Creates Session and increments number of session and ongoing session will be true\r\n    createSessionHandler = (e)=>{\r\n        e.preventDefault()\r\n\r\n        const new_session = {\r\n            session_id: this.state.session_numbers,\r\n            name: \"\",\r\n            session_start: moment().format(\"DD-MM-YYYY hh:mm:ss A\"),\r\n            session_stopped: 0,\r\n        }\r\n        let sessions = [new_session, ...this.state.sessions]\r\n        this.setState({sessions})\r\n        let new_session_numbers = this.state.session_numbers + 1\r\n        this.setState({\r\n            session_numbers: new_session_numbers,\r\n            session_ongoing: 1,\r\n        })\r\n    }\r\n\r\n    stopSessionHandler = async (e)=>{\r\n        e.preventDefault()\r\n\r\n        // this.setState(prevState => ({\r\n        //     sessions: {\r\n        //         ...prevState.sessions,\r\n        //         [prevState.sessions[this.state.session_numbers-1].session_end]: moment().format(\"DD-MM-YYYY hh:mm:ss\"),\r\n        //     },\r\n        // }));\r\n        let sessions = this.state.sessions.map(session => (\r\n            session.session_id===this.state.session_numbers-1 ? {...session, session_end: moment().format(\"DD-MM-YYYY hh:mm:ss A\"), session_stopped: 1}: session\r\n        ))\r\n        await this.setState({ sessions });\r\n\r\n        await this.setState({\r\n            session_ongoing: 0,\r\n        })\r\n        console.log(this.state)\r\n    }\r\n\r\n\r\n    // Deletes all mangas in the favorite State after clicking the delete button\r\n    deleteSessionHandler = (e)=>{\r\n        e.preventDefault()\r\n        let sessions = []\r\n        this.setState({sessions})\r\n    }\r\n\r\n    render() {\r\n        // List of all sessions completed\r\n        let sessionsList = this.state.sessions.map(session=> {\r\n            if(session.session_stopped)\r\n            return(\r\n                <div key={session.session_id}>\r\n                    <p><b>Session ID:</b> {session.session_id} | <b>Session Start:</b> {session.session_start} | <b>Session End:</b> {session.session_end}\r\n                        | <b>Session Duartion:</b> {session.session_end.diff(session.session_start).humanize()}</p>\r\n\r\n\r\n                </div>\r\n\r\n            )\r\n        })\r\n\r\n        let currentSession = this.state.sessions.map(session=> {\r\n            if(!session.session_stopped)\r\n                return(\r\n                    <div key={session.session_id}>\r\n                        <p><b>Session ID:</b> {session.session_id} | <b>Session Start:</b> {session.session_start}</p>\r\n                    </div>\r\n\r\n                )\r\n        })\r\n\r\n            return(\r\n            <div>\r\n                <h1>STUDY SESSION</h1>\r\n                <h2>Current study sessions: </h2>\r\n                {this.state.session_ongoing != 1 ? <button onClick={this.createSessionHandler}>Create New Session</button>\r\n                    : <button onClick={this.stopSessionHandler}>Stop Session</button>}{currentSession}\r\n                <p></p>\r\n\r\n                {(this.state.sessions.length > 0) && (this.state.sessions[this.state.sessions.length-1].session_stopped!=0) && <h2>Past study sessions: </h2>}\r\n                {(this.state.sessions.length > 0) && (this.state.sessions[this.state.sessions.length-1].session_stopped!=0) && <button onClick={this.deleteSessionHandler}>Delete all Sessions</button>}\r\n\r\n                {sessionsList}\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default StudySession;"]},"metadata":{},"sourceType":"module"}