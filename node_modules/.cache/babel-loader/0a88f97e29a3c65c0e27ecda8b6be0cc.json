{"ast":null,"code":"import axios from \"axios\";\nconst baseURL = \"http://localhost:8080/\";\n\nclass Authservice {\n  login(user, secret) {\n    console.log(\"user and pw \", user, secret);\n    return axios.post(baseURL + \"token/\", {\n      user,\n      secret\n    }).then(response => {\n      if (response.data.error == 'invalid_client') {\n        console.log(\"error\");\n        throw Error(\"Username or password is wrong, try again!\");\n      } else {\n        if (response.data.access_token) {\n          localStorage.setItem('user', JSON.stringify(response.data));\n          console.log(response.data);\n        }\n\n        return response.data;\n      }\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  async register(user, secret) {\n    let users = {\n      user: user,\n      secret: secret\n    };\n    let resp = await axios.post(baseURL + \"users/add/\", users, {});\n    console.log(\"This is the response:\");\n    console.log(resp);\n    console.log(\"This is response over\");\n    return resp;\n    /*       let basicAuth = 'Basic ' + btoa(user + ':' + secret);\r\n           console.log(\"user\", user, \"sec\", secret)\r\n            return axios.post(baseURL + \"/users/add\", {}, {\r\n                 auth: {\r\n                     \"user\": user,\r\n                     \"secret\": secret\r\n                 }\r\n             });\r\n           console.log(\"POSTED?\")*/\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n    ;\n  }\n\n}\n\nexport default new Authservice();","map":{"version":3,"sources":["C:/Users/pbuch/Documents/Master/ASE/project thingy/thingy-client-purple/src/components/services/Authservice.js"],"names":["axios","baseURL","Authservice","login","user","secret","console","log","post","then","response","data","error","Error","access_token","localStorage","setItem","JSON","stringify","logout","removeItem","register","users","resp","getCurrentUser","parse","getItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,wBAAhB;;AAGA,MAAMC,WAAN,CAAkB;AACdC,EAAAA,KAAK,CAACC,IAAD,EAAOC,MAAP,EAAe;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,IAA5B,EAAkCC,MAAlC;AACA,WAAOL,KAAK,CACPQ,IADE,CACGP,OAAO,GAAG,QADb,EACuB;AACtBG,MAAAA,IADsB;AAEtBC,MAAAA;AAFsB,KADvB,EAKFI,IALE,CAKGC,QAAQ,IAAI;AACd,UAAGA,QAAQ,CAACC,IAAT,CAAcC,KAAd,IAAqB,gBAAxB,EAAyC;AACrCN,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,cAAMM,KAAK,CAAC,2CAAD,CAAX;AACH,OAHD,MAGK;AACD,YAAIH,QAAQ,CAACC,IAAT,CAAcG,YAAlB,EAAgC;AAC5BC,UAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACC,IAAxB,CAA7B;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACC,IAArB;AACH;;AAED,eAAOD,QAAQ,CAACC,IAAhB;AACH;AACJ,KAjBE,CAAP;AAkBH;;AAEDQ,EAAAA,MAAM,GAAG;AACLJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,MAAxB;AACH;;AAGa,QAARC,QAAQ,CAACjB,IAAD,EAAOC,MAAP,EAAe;AACzB,QAAIiB,KAAK,GAAG;AACRlB,MAAAA,IAAI,EAAEA,IADE;AAERC,MAAAA,MAAM,EAAEA;AAFA,KAAZ;AAIA,QAAIkB,IAAI,GAAG,MAAMvB,KAAK,CAACQ,IAAN,CAAWP,OAAO,GAAG,YAArB,EAAmCqB,KAAnC,EAA0C,EAA1C,CAAjB;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYgB,IAAZ;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,WAAOgB,IAAP;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK;;AAEDC,EAAAA,cAAc,GAAG;AACb,WAAOP,IAAI,CAACQ,KAAL,CAAWV,YAAY,CAACW,OAAb,CAAqB,MAArB,CAAX,CAAP;AACA;AACH;;AApDa;;AAuDlB,eAAe,IAAIxB,WAAJ,EAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseURL = \"http://localhost:8080/\"\r\n\r\n\r\nclass Authservice {\r\n    login(user, secret) {\r\n        console.log(\"user and pw \", user, secret)\r\n        return axios\r\n            .post(baseURL + \"token/\", {\r\n                user,\r\n                secret\r\n            })\r\n            .then(response => {\r\n                if(response.data.error=='invalid_client'){\r\n                    console.log(\"error\")\r\n                    throw Error(\"Username or password is wrong, try again!\")\r\n                }else{\r\n                    if (response.data.access_token) {\r\n                        localStorage.setItem('user', JSON.stringify(response.data));\r\n                        console.log(response.data)\r\n                    }\r\n\r\n                    return response.data;\r\n                }\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"user\");\r\n    }\r\n\r\n\r\n    async register(user, secret) {\r\n        let users = {\r\n            user: user,\r\n            secret: secret,\r\n        }\r\n        let resp = await axios.post(baseURL + \"users/add/\", users, {})\r\n        console.log(\"This is the response:\")\r\n        console.log(resp)\r\n        console.log(\"This is response over\")\r\n        return resp\r\n        /*       let basicAuth = 'Basic ' + btoa(user + ':' + secret);\r\n               console.log(\"user\", user, \"sec\", secret)\r\n                return axios.post(baseURL + \"/users/add\", {}, {\r\n                     auth: {\r\n                         \"user\": user,\r\n                         \"secret\": secret\r\n                     }\r\n                 });\r\n               console.log(\"POSTED?\")*/\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return JSON.parse(localStorage.getItem('user'));\r\n        ;\r\n    }\r\n}\r\n\r\nexport default new Authservice();"]},"metadata":{},"sourceType":"module"}