[{"C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\index.js":"1","C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\reportWebVitals.js":"2","C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\App.js":"3","C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\StudySession.js":"4","C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\NavBar\\Nav.js":"5","C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\AreaRechartComponent.js":"6","C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\RangeSlider.js":"7","C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\Settings.js":"8","C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\ProtectedRoute.js":"9","C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\Signup\\Signup.js":"10","C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\common\\auth-verify.js":"11","C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\Login\\Login.js":"12","C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\services\\Authservice.js":"13","C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\services\\authheader.js":"14","C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\ScrollToTop\\ScrollToTop.js":"15","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\index.js":"16","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\App.js":"17","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\reportWebVitals.js":"18","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\Settings.js":"19","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\ProtectedRoute.js":"20","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\StudySession.js":"21","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\NavBar\\Nav.js":"22","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\Login\\Folders.js":"23","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\Signup\\Signup.js":"24","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\common\\auth-verify.js":"25","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\services\\Authservice.js":"26","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\services\\authheader.js":"27","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\RangeSlider.js":"28","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\AreaRechartComponent.js":"29","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\ScrollToTop\\ScrollToTop.js":"30"},{"size":517,"mtime":1634671524907,"results":"31","hashOfConfig":"32"},{"size":375,"mtime":1634671524908,"results":"33","hashOfConfig":"32"},{"size":1956,"mtime":1640089465515,"results":"34","hashOfConfig":"32"},{"size":19392,"mtime":1640183573826,"results":"35","hashOfConfig":"32"},{"size":2061,"mtime":1640089465521,"results":"36","hashOfConfig":"32"},{"size":1854,"mtime":1640089465517,"results":"37","hashOfConfig":"32"},{"size":1423,"mtime":1640112653612,"results":"38","hashOfConfig":"32"},{"size":4701,"mtime":1640157969937,"results":"39","hashOfConfig":"32"},{"size":516,"mtime":1640089465523,"results":"40","hashOfConfig":"32"},{"size":7823,"mtime":1640089465527,"results":"41","hashOfConfig":"32"},{"size":988,"mtime":1640089465530,"results":"42","hashOfConfig":"32"},{"size":6178,"mtime":1640089465519,"results":"43","hashOfConfig":"32"},{"size":1651,"mtime":1640089465531,"results":"44","hashOfConfig":"32"},{"size":718,"mtime":1639921385754,"results":"45","hashOfConfig":"32"},{"size":874,"mtime":1640089465525,"results":"46","hashOfConfig":"32"},{"size":517,"mtime":1634671524907,"results":"47","hashOfConfig":"48"},{"size":2052,"mtime":1651666927979,"results":"49","hashOfConfig":"48"},{"size":375,"mtime":1634671524908,"results":"50","hashOfConfig":"48"},{"size":4701,"mtime":1640157969937,"results":"51","hashOfConfig":"48"},{"size":518,"mtime":1653739603912,"results":"52","hashOfConfig":"48"},{"size":19392,"mtime":1640185889323,"results":"53","hashOfConfig":"48"},{"size":2080,"mtime":1651666150497,"results":"54","hashOfConfig":"48"},{"size":19882,"mtime":1653767986701,"results":"55","hashOfConfig":"48"},{"size":7823,"mtime":1640089465527,"results":"56","hashOfConfig":"48"},{"size":988,"mtime":1640089465530,"results":"57","hashOfConfig":"48"},{"size":1651,"mtime":1640089465531,"results":"58","hashOfConfig":"48"},{"size":718,"mtime":1639921385754,"results":"59","hashOfConfig":"48"},{"size":1423,"mtime":1640112653612,"results":"60","hashOfConfig":"48"},{"size":1854,"mtime":1640089465517,"results":"61","hashOfConfig":"48"},{"size":874,"mtime":1640089465525,"results":"62","hashOfConfig":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"7a5yx4",{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1fxtjc4",{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"96"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"96"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\index.js",[],["131","132"],"C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\reportWebVitals.js",[],"C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\App.js",["133","134"],"C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\StudySession.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152"],"C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\NavBar\\Nav.js",["153","154","155","156","157"],"C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\AreaRechartComponent.js",["158"],"C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\RangeSlider.js",[],"C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\Settings.js",[],"C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\ProtectedRoute.js",["159"],"C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\Signup\\Signup.js",["160"],"C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\common\\auth-verify.js",[],"C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\Login\\Login.js",["161"],"C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\services\\Authservice.js",[],"C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\services\\authheader.js",[],"C:\\Users\\pbuch\\Documents\\Master\\ASE\\project thingy\\thingy-client-purple\\src\\components\\ScrollToTop\\ScrollToTop.js",[],"C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\index.js",[],["162","163"],"C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\App.js",["164","165"],"import './App.css';\r\nimport {BrowserRouter, Redirect, Route, Router, Switch} from \"react-router-dom\";\r\nimport Settings from './components/Settings.js'\r\nimport Nav from \"./components/NavBar/Nav\";\r\nimport StudySession from \"./components/StudySession\";\r\nimport Folders from \"./components/Login/Folders\";\r\nimport Signup from \"./components/Signup/Signup\"\r\nimport AuthVerify from \"./components/common/auth-verify\";\r\nimport Authservice from \"./components/services/Authservice\";\r\nimport {Component} from \"react\";\r\nimport ProtectedRoute from \"./components/ProtectedRoute\";\r\n\r\n\r\nclass App extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.logOut = this.logOut.bind(this)\r\n        this.state ={\r\n            currentUser: undefined,\r\n            xoffset: 1000,\r\n            yoffset: 1000,\r\n            delta: 10,\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //logout if token expired\r\n    logOut() {\r\n        Authservice.logout();\r\n        this.setState({\r\n            currentUser: undefined,\r\n        });\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div className=\"App\">\r\n\r\n                <div className={\"back\"}>\r\n                    <BrowserRouter>\r\n                        <Nav />\r\n                        <div className={\"background\"}>\r\n\r\n                        <Switch>\r\n                            <ProtectedRoute exact path=\"/studysession\" component={StudySession}/>\r\n                            <Route exact path=\"/folders\" component={Folders}/>\r\n                            <Route exact path=\"/signup\" component={Signup}/>\r\n                            <ProtectedRoute exact path=\"/settings\" component={Settings}/>\r\n                            <ProtectedRoute path=\"*\" component={StudySession}/>\r\n                            <Route path=\"*\" component={Folders}/>\r\n                        </Switch>\r\n\r\n                        <AuthVerify logOut={this.logOut}/>\r\n\r\n                        </div>\r\n                    </BrowserRouter>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\reportWebVitals.js",[],"C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\Settings.js",[],"C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\ProtectedRoute.js",["166"],"import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\n//Route can only be accessed if logged in\r\nfunction ProtectedRoute({ component: Component, ...restOfProps }) {\r\n    const isAuthenticated = localStorage.getItem(\"user\")!=undefined;\r\n\r\n    return (\r\n        <Route\r\n            {...restOfProps}\r\n            render={(props) =>\r\n                isAuthenticated ? <Component {...props} /> : <Redirect to=\"/folders\" />\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default ProtectedRoute;","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\StudySession.js",["167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184"],"import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport './StudySession.css';\r\nimport AreaRechartComponent from \"./AreaRechartComponent\";\r\nimport ScrollToTop from \"./ScrollToTop/ScrollToTop\";\r\n\r\n// Notify user with short messages\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport authHeader from \"./services/authheader\";\r\n\r\nconst baseURL = \"http://localhost:8080\"\r\n\r\n\r\nclass StudySession extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        // Update input title to state.currentTitle\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n        this.state = {\r\n            inform_notifications_every_sec: 30000, // every x seconds check for notifications and inform the user\r\n            session_ongoing: 0, // Boolean: is there a current session ongoing? then do not show delete button\r\n            ongoing_session_id: \"\",\r\n            currentTitle: \"\", // currentTitle to be set by the user -> will be pushed to the backend as session_name when creating a new session\r\n            //How our sessions are structured:\r\n            sessions: [\r\n                {\r\n                    session_id: 1, // Every session has an unique ID\r\n                    session_name: \"Name of Session\", // Name of the session\r\n                    session_start: \"20.12.2021\", // date and time the session started\r\n                    session_end: \"21.12.2021\", // date and time the session stopped\r\n                    session_breakTime: \"21.12.2021\", // date and time when the next break is\r\n                    session_duration: 7, // date and time between start and end\r\n                    session_stopped: 0 // true if the session was stopped, false if it is still ongoing\r\n                }\r\n            ],\r\n\r\n            // Will be updated by the server and received from the backend with a get every x seconds\r\n            list_of_notifications:{\r\n                open_window: false,\r\n                make_break: false,\r\n                alarm_humidity_wrong: false,\r\n                air_quality_wrong: false,\r\n                alarm_temperature_cold: false,\r\n                alarm_temperature_hot: false,\r\n            },\r\n\r\n            currentCO2: \"\",\r\n            currentTemp: \"\",\r\n            avgCO2:\"example\",\r\n            avgTemp:\"example\",\r\n\r\n            allSessionsTemp:[], //list of all temp measurements (all sessions)\r\n            allSessionsCO2: [], //list of all co2 measurements (all sessions)\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n\r\n        //get current measurements\r\n        await this.getMeasurements()\r\n\r\n        // Update notifications every x seconds\r\n        await this.checkNotificationsHandler()\r\n        this.mySecondInterval = setInterval(this.checkNotificationsHandler, this.state.inform_notifications_every_sec)\r\n\r\n        // Get all sessions from backend\r\n        await axios.get(baseURL+\"/session/\",{ headers: authHeader() }).then((res) =>{\r\n            let data = res.data\r\n            this.setState({sessions: data.reverse()})\r\n\r\n            // check if a session is ongoing\r\n            if(this.state.sessions.length > 0){\r\n                if (this.state.sessions[this.state.sessions.length-1].session_stopped){\r\n                    this.setState({\r\n                        session_ongoing: 0,\r\n                    })\r\n                }\r\n                else{\r\n                    this.setState({\r\n                        session_ongoing: 1,\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.myInterval);\r\n        clearInterval(this.mySecondInterval);\r\n    }\r\n\r\n    // Input user for title of a session\r\n    handleChange(event) {\r\n        event.preventDefault()\r\n        this.setState({currentTitle: event.target.value});\r\n    }\r\n\r\n    // Creates Session and increments number of session and ongoing session will be true\r\n    createSessionHandler = async (e)=>{\r\n\r\n        //start interval for updating current measurements\r\n        this.myInterval = setInterval(this.getMeasurements,10000)//every 10 seconds\r\n\r\n        e.preventDefault()\r\n\r\n        let new_session = {\r\n            session_id: this.state.sessions.length,\r\n            session_name: this.state.currentTitle,\r\n            session_stopped: 0,\r\n            //session_breakTime: 0,\r\n        }\r\n\r\n        // Send creation of session to backend and get the session_start of the backend\r\n        console.log(\"This data will be sent to the backend: \", new_session)\r\n        await axios.post(baseURL+'/session/', new_session, { headers: authHeader() })\r\n             .then(resp => {\r\n                 console.log(\"create Session respond:\", resp)\r\n                 new_session[\"session_start\"] = resp[\"data\"][\"session_start\"]\r\n                 if (resp.status !== 200) {\r\n                     throw new Error(`Request failed: ${resp.status}`);\r\n                 }\r\n             })\r\n             .catch(err => {\r\n                 console.log(err.response);\r\n             })\r\n\r\n        // Add the created session to the list of sessions\r\n         let sessions = [new_session, ...this.state.sessions]\r\n\r\n        // Change session ongoing to true\r\n        await this.setState({\r\n            session_ongoing: 1,\r\n        })\r\n\r\n        await this.setState({ongoing_session_id: new_session.session_id})\r\n        await this.getMeasurements()\r\n        await this.setState({sessions})\r\n        console.log(\"State after created session: \",this.state)\r\n    }\r\n\r\n    // Stop the current session and get the session_end time from the backend and save it in the last session\r\n    stopSessionHandler = async (e)=>{\r\n        e.preventDefault()\r\n        let sessions\r\n\r\n        await axios.post(baseURL+'/session/stop/', {},{ headers: authHeader() })\r\n            .then(resp => {\r\n                 sessions = this.state.sessions.map(session => (\r\n                    session.session_id===this.state.sessions.length-1 ? {...session, session_end: resp[\"data\"][\"session_end\"], session_stopped: 1}: session\r\n\r\n            ))\r\n                console.log(\"sessions after stopped\", this.state)\r\n                if (resp.status !== 200) {\r\n                    throw new Error(`Request failed: ${resp.status}`);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response);\r\n            })\r\n\r\n        //get measurements\r\n        await this.getMeasurements()\r\n\r\n        //get session with id\r\n        let newSession = await this.getSessionById(sessions[0].session_id)\r\n        sessions[0]=newSession\r\n        await this.setState({\r\n            session_ongoing: 0,\r\n        })\r\n\r\n        // Set new sessions\r\n        await this.setState({ sessions });\r\n\r\n        clearInterval(this.myInterval); //stop interval for updating current measurements\r\n    }\r\n\r\n    //get the session with the id\r\n    getSessionById = async (id) => {\r\n        let session = \"\"\r\n        await axios.get(baseURL + /session/+id, {headers: authHeader()}).then((res) => {\r\n            let data = res.data\r\n            session = data\r\n        })\r\n\r\n        return session\r\n    }\r\n\r\n    getMeasurements = async () => {\r\n        //get CO2 for all sessions and store it, so it can be used for area chart\r\n        await axios.get(baseURL + \"/CO2/\",{ headers: authHeader() }).then((res) => {\r\n            let data = res.data\r\n            console.log(\"DATA CO2: \", data)\r\n\r\n            //dictionary will then be stored in allSessionsCO2. As format for area chart\r\n            let newDict = []\r\n\r\n            //iterate over whole data to get key (id of session) and value (list of all CO2 measurements)\r\n            Object.entries(data).length > 0 &&\r\n            Object.entries(data).map(([key, value]) => {\r\n                //array to store each dict of one session which is used for area chart: name and CO2\r\n                let array = []\r\n                //console.log(key, value)\r\n                Object.entries(value).map(([index, oneMeasure]) => {\r\n                    array.push(\r\n                        {\r\n                            name: \"\",\r\n                            CO2: oneMeasure,\r\n                        }\r\n                    )\r\n                })\r\n                //add each session to the new dictionary\r\n                newDict.push({\r\n                    id: key,\r\n                    measurements: array\r\n                })\r\n            })\r\n\r\n            //set state to the new dictionary\r\n            this.setState({allSessionsCO2: newDict})\r\n        })\r\n\r\n        //same as above but for temp: get temp for all sessions and store it, so it can be used for area chart\r\n        await axios.get(baseURL + \"/temp/\",{ headers: authHeader() }).then((res) => {\r\n            let data = res.data\r\n            console.log(\"DATA TEMP\", data)\r\n\r\n            //dictionary will then be stored in allSessionsTemp. As format for area chart\r\n            let newDict = []\r\n\r\n            //iterate over whole data to get key (nid of session) and value (list of all temp measurements)\r\n            Object.entries(data).length > 0 &&\r\n            Object.entries(data).map(([key, value]) => {\r\n                //array to store each dict of one session which is used for area chart: name and temp\r\n                let array = []\r\n                Object.entries(value).map(([index, oneMeasure]) => {\r\n                    array.push(\r\n                        {\r\n                            name: \"\",\r\n                            Temperature: oneMeasure,\r\n\r\n                        }\r\n                    )\r\n                })\r\n                //add each session to the new dictionary\r\n                newDict.push({\r\n                    id: key,\r\n                    measurements: array\r\n                })\r\n            })\r\n\r\n            //set state to the new dictionary\r\n            this.setState({allSessionsTemp: newDict})\r\n\r\n        })\r\n\r\n    }\r\n\r\n    // Deletes all sessions after clicking the delete button\r\n    deleteSessionHandler = async (e) => {\r\n        e.preventDefault()\r\n        let sessions = []\r\n        this.setState({sessions})\r\n        axios.delete(baseURL + '/session/',{ headers: authHeader() })\r\n            .then(resp => {\r\n                if (resp.status !== 200) {\r\n                    throw new Error(`Request failed: ${resp.status}`);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response);\r\n            })\r\n        await this.getMeasurements()\r\n\r\n    }\r\n\r\n    // Check all 30 seconds the state of notifications and informs the user with toast\r\n    checkNotificationsHandler = async () => {\r\n\r\n        // Get all notifications from backend\r\n        await axios.get(baseURL+\"/session/check/\",{ headers: authHeader() }).then((res) =>{\r\n            let data = res.data\r\n            // Overwrite the notification values from the backend\r\n            this.setState({list_of_notifications: data})\r\n        })\r\n\r\n        // Check notifications and alarm the user\r\n        if (this.state.list_of_notifications.make_break){\r\n            toast.warning('You need a break! ')\r\n            const list_of_notifications = {...this.state.list_of_notifications, make_break: false}\r\n            this.setState({list_of_notifications})\r\n        }\r\n        if (this.state.list_of_notifications.open_window){\r\n            toast.warning('You need to open the window! ')\r\n            const list_of_notifications = {...this.state.list_of_notifications, open_window: false}\r\n            this.setState({list_of_notifications})\r\n        }\r\n        if (this.state.list_of_notifications.air_quality_wrong){\r\n            toast.warning('You need to open the window since the air quality is bad! ')\r\n            const list_of_notifications = {...this.state.list_of_notifications, air_quality_wrong: false}\r\n            this.setState({list_of_notifications})\r\n        }\r\n        if (this.state.list_of_notifications.alarm_humidity_wrong){\r\n            toast.warning('You need to open the window since the humidity is bad! ')\r\n            const list_of_notifications = {...this.state.list_of_notifications, alarm_humidity_wrong: false}\r\n            this.setState({list_of_notifications})\r\n        }\r\n        if (this.state.list_of_notifications.alarm_temperature_cold){\r\n            toast.warning('It is colder than the limited set in settings! Turn on the heating! ')\r\n            const list_of_notifications = {...this.state.list_of_notifications, alarm_temperature_cold: false}\r\n            this.setState({list_of_notifications})\r\n        }\r\n        if (this.state.list_of_notifications.alarm_temperature_hot){\r\n            toast.warning('It is colder than the limited set in settings! Turn off the heating or open the window! ')\r\n            const list_of_notifications = {...this.state.list_of_notifications, alarm_temperature_hot: false}\r\n            this.setState({list_of_notifications})\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        // List of all sessions completed\r\n            let sessionsList = this.state.sessions.map(session => {\r\n                if (session.session_stopped) {\r\n\r\n                    //iterate to find temp measurements of the right id\r\n                    let sessionMeasTemp = null\r\n                    this.state.allSessionsTemp.map(entry => {\r\n                        if (entry.id == session.session_id) {\r\n                            sessionMeasTemp = entry.measurements\r\n                        }\r\n                    })\r\n\r\n                    //iterate to find co2 measurements of the right id\r\n                    let sessionMeasCO2 = null\r\n                    this.state.allSessionsCO2.map(entry => {\r\n                        if (entry.id == session.session_id) {\r\n                            sessionMeasCO2 = entry.measurements\r\n                            sessionMeasCO2 = entry.measurements\r\n                        }\r\n                    })\r\n\r\n                       return (\r\n                        <div key={session.session_id}>\r\n                            <div className={\"sessionElem\"}>\r\n                                <p><b>{session.session_name}</b> | <b>Session ID:</b> {session.session_id} </p> <p><b>Session\r\n                                    Start:</b> {session.session_start} | <b>Session End:</b> {session.session_end}</p>\r\n                                <p><b>Average Temperature: </b>{session.average_temp.toFixed(1)}° C | <b>Average CO<sub>2</sub>: </b>{session.average_co2.toFixed(1)} CO<sub>2</sub>e</p>\r\n                                {/*| <b>Session Duartion:</b> {session.session_end - session.session_start)}</p>*/}\r\n                                {sessionMeasTemp == null ? \"\" : <AreaRechartComponent type={\"Temperature\"}\r\n                                                                                data={sessionMeasTemp}></AreaRechartComponent>}\r\n                                {sessionMeasCO2 == null ? \"\" : <AreaRechartComponent type={\"CO2\"}\r\n                                                                                  data={sessionMeasCO2}></AreaRechartComponent>}\r\n\r\n                                {/* <AreaRechartComponent type={\"CO2\"}8148f3b4c0ed\r\n                                                  data={this.state.allSessionsCO2[session.session_id][session.session_name]}></AreaRechartComponent>*/}\r\n                            </div>\r\n                        </div>\r\n\r\n                    )\r\n                }\r\n            })\r\n            // List of current active session\r\n            let currentSession = this.state.sessions.map(session => {\r\n                if (!session.session_stopped){\r\n\r\n                    //iterate to find temp measurements of the right id\r\n                    let sessionMeasTemp = []\r\n                    this.state.allSessionsTemp.map(entry => {\r\n                        if (entry.id == session.session_id) {\r\n                            sessionMeasTemp = entry.measurements\r\n                        }\r\n                    })\r\n\r\n                    //iterate to find co2 measurements of the right id\r\n                    let sessionMeasCO2 = []\r\n                    this.state.allSessionsCO2.map(entry => {\r\n                        if (entry.id == session.session_id) {\r\n                            sessionMeasCO2 = entry.measurements\r\n                        }\r\n                    })\r\n\r\n                    //show ongoing session data\r\n                    return (\r\n                        <div key={session.session_id}>\r\n                            <p><b>{session.session_name}</b> | <b>Session ID:</b> {session.session_id} </p> <p><b>Session\r\n                                Start:</b> {session.session_start}</p>\r\n                            {this.state.sessions.length!=0&&sessionMeasTemp.length!=0?<p><b>Current Temperature:</b> {sessionMeasTemp[sessionMeasTemp.length-1].Temperature}° C</p>:<p><b>Current Temp:</b> Not measured yet</p>}\r\n                            {this.state.sessions.length!=0&&sessionMeasCO2.length!=0?<p><b>Current CO<sub>2</sub>:</b> {sessionMeasCO2[sessionMeasCO2.length-1].CO2} CO<sub>2</sub>e</p>:<p><b>Current CO<sub>2</sub>:</b> Not measured yet</p>}\r\n                        </div>\r\n\r\n                    )}\r\n            })\r\n\r\n            return (\r\n             <div>\r\n                 <ToastContainer autoClose={false} limit={1} position=\"top-center\"/>\r\n                    <div className={\"backgroundStudySession\"}>\r\n                        <div className={\"elem\"}>\r\n                            <h1>STUDY SESSION</h1>\r\n                            <h2>Current study sessions: </h2>\r\n                            {\r\n                                <form>\r\n                                    <label>\r\n                                        <b>Name: </b>\r\n                                        <input type=\"text\" placeholder={\"Enter an optional name\"}\r\n                                               onKeyPress={(e) => {\r\n                                                   e.key === 'Enter' && e.preventDefault();\r\n                                               }} value={this.state.currentTitle} onChange={this.handleChange}/>\r\n                                    </label>\r\n                                </form>\r\n                            }\r\n                            {this.state.session_ongoing !== 1 ?\r\n                                <button className={\"button\"} onClick={this.createSessionHandler}>Create New Session</button>\r\n                                : <button  className={\"button\"} onClick={this.stopSessionHandler}>Stop Session</button>}\r\n\r\n                            {currentSession}\r\n                            <p></p>\r\n\r\n                            {(this.state.sessions.length > 0) && (this.state.sessions[this.state.sessions.length - 1].session_stopped !== 0) &&\r\n                            <h2>Past study sessions: </h2>}\r\n                            {(this.state.sessions.length > 0) && (!this.state.session_ongoing) && (this.state.sessions[this.state.sessions.length - 1].session_stopped !== 0) &&\r\n                            <button  className={\"button\"}  onClick={this.deleteSessionHandler}>Delete all Sessions</button>}\r\n\r\n                            {sessionsList}\r\n                        </div>\r\n                    </div>\r\n                    <ScrollToTop></ScrollToTop>\r\n                </div>\r\n\r\n            )\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default StudySession;","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\NavBar\\Nav.js",["185","186","187","188","189"],"import React, {Component} from 'react';\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport './Nav.css';\r\nimport Authservice from \"../services/Authservice\";\r\n\r\nclass Nav extends Component{\r\n\r\n    constructor() {\r\n        super();\r\n        this.state={\r\n            user: undefined,\r\n        }\r\n    }\r\n\r\n    //get current user\r\n    componentDidMount() {\r\n        this.setState({user: localStorage.getItem('user')})\r\n    }\r\n\r\n    //logout when clicking on logout button\r\n    logout = () =>{\r\n        Authservice.logout();\r\n        this.setState({user: undefined});\r\n\r\n    }\r\n\r\n    render(){\r\n       let user =localStorage.getItem(\"user\")\r\n\r\n        return(\r\n            <nav className={\"NavbarItems\"}>\r\n                <Link to=\"/studysession\" style={{ textDecoration: 'none', justifyContent:'center' }}><h1 className={\" navbar-logo\"}>MMI </h1></Link>\r\n\r\n                <div className={'nav-menu'}>\r\n                    {user!=undefined?<Link to={\"/studysession\"}>\r\n                        <button className={\"button\"}>\r\n                            Study session\r\n                        </button>\r\n                    </Link>:\"\"}\r\n                    {user!=undefined?<Link to=\"/settings\">\r\n                        <button className={\"button\"}>\r\n                            Settings\r\n                        </button>\r\n                    </Link>:\"\"}\r\n                    {user!=undefined? <Link to=\"/login\">\r\n                        <button className={\"button\"} onClick={this.logout}>\r\n                            Logout\r\n                        </button>\r\n                    </Link>:<Link to=\"/login\">\r\n                        <button className={\"button\"}>\r\n                            Login\r\n                        </button>\r\n                    </Link>}\r\n                    {user==undefined?<Link to=\"/signup\">\r\n                        <button className={\"button\"}>\r\n                            Signup\r\n                        </button>\r\n                    </Link>:\"\"}\r\n\r\n\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Nav;","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\Login\\Folders.js",["190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214"],"C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\Signup\\Signup.js",["215"],"import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport style from \"./Signup.css\"\r\nimport AuthService from \"../services/Authservice\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n//to make fields required\r\nconst required = value => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n//verify username\r\nconst vusername = value => {\r\n    if (value.length < 3 || value.length > 20) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The username must be between 3 and 20 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n//verify password\r\nconst vpassword = value => {\r\n    if (value.length < 6 || value.length > 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                The password must be between 6 and 40 characters.\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default class Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleRegister = this.handleRegister.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            successful: false,\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n    //change username in state\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    //change password in state\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    //when clicking on signup\r\n    handleRegister(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            message: \"\",\r\n            successful: false\r\n        });\r\n\r\n        this.form.validateAll();\r\n\r\n        if (this.checkBtn.context._errors.length === 0) {\r\n            AuthService.register(\r\n                this.state.username,\r\n                this.state.password\r\n            ).then(\r\n                response => {\r\n                    this.setState({\r\n                        message: response.data.message,\r\n                        successful: true\r\n                    });\r\n\r\n                    //login right after signup\r\n                    AuthService.login(this.state.username, this.state.password).then(\r\n                        () => {\r\n                            this.props.history.push(\"/studysession\");\r\n                            window.location.reload();\r\n                        },\r\n                        error => {\r\n                            const resMessage =\r\n                                (error.response &&\r\n                                    error.response.data &&\r\n                                    error.response.data.message) ||\r\n                                error.message ||\r\n                                error.toString();\r\n\r\n                            this.setState({\r\n                                loading: false,\r\n                                message: resMessage\r\n                            });\r\n                        }\r\n                    );\r\n                },\r\n                error => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    this.setState({\r\n                        successful: false,\r\n                        message: resMessage\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"textArea1\"}>\r\n                <div className={\"textArea2\"}>\r\n                    <div className=\"col-md-12\">\r\n                         <div className=\"card card-container\">\r\n                             <h1 className={\"LoginTitle\"}>Signup</h1>\r\n\r\n                            <Form\r\n                                onSubmit={this.handleRegister}\r\n                                ref={c => {\r\n                                    this.form = c;\r\n                                }}\r\n                            >\r\n                                {!this.state.successful && (\r\n                                    <div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"username\">Username</label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"username\"\r\n                                                value={this.state.username}\r\n                                                onChange={this.onChangeUsername}\r\n                                                validations={[required, vusername]}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"password\">Password</label>\r\n                                            <Input\r\n                                                type=\"password\"\r\n                                                className=\"form-control\"\r\n                                                name=\"password\"\r\n                                                value={this.state.password}\r\n                                                onChange={this.onChangePassword}\r\n                                                validations={[required, vpassword]}\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <button className=\"button\">Sign Up</button>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n\r\n                                {this.state.message && (\r\n                                    <div className=\"form-group\">\r\n                                        <div\r\n                                            className={\r\n                                                this.state.successful\r\n                                                    ? \"alert alert-success\"\r\n                                                    : \"alert alert-danger\"\r\n                                            }\r\n                                            role=\"alert\"\r\n                                        >\r\n                                            {this.state.message}\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                <CheckButton\r\n                                    style={{ display: \"none\" }}\r\n                                    ref={c => {\r\n                                        this.checkBtn = c;\r\n                                    }}\r\n                                />\r\n                            </Form>\r\n                             <p className=\"mt-2\"> Already have an account? <Link to=\"/login\">Login</Link></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\common\\auth-verify.js",[],"C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\services\\Authservice.js",[],"C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\services\\authheader.js",[],"C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\RangeSlider.js",[],"C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\AreaRechartComponent.js",["216"],"import React from \"react\";\r\nimport {AreaChart, Area, YAxis, XAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer} from 'recharts';\r\n\r\n//chart to show the measurements\r\nclass AreaRechartComponent extends React.Component {\r\n\r\n    data = this.props.data\r\n    type = this.props.type\r\n\r\n    render() {\r\n        return (\r\n            <ResponsiveContainer width=\"95%\" height={220}>\r\n                <AreaChart data={this.data}\r\n                           margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\r\n                    <defs>\r\n                        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                            <stop offset=\"5%\" stopColor=\"rgba(220, 134, 108, 1)\" stopOpacity={0.8} />\r\n                            <stop offset=\"95%\" stopColor=\"rgba(220, 134, 108, 1)\" stopOpacity={0} />\r\n                        </linearGradient>\r\n                        <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                            <stop offset=\"5%\" stopColor=\"rgba(220, 134, 108, 1)\" stopOpacity={0.8} />\r\n                            <stop offset=\"95%\" stopColor=\"rgba(220, 134, 108, 1)\" stopOpacity={0} />\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    {this.type==\"Temperature\"?<Area type=\"monotone\" dataKey=\"Temperature\" stroke=\"rgba(158, 82, 75, 1)\" fillOpacity={1} fill=\"url(#colorUv)\" />\r\n                        :<Area type=\"monotone\" dataKey=\"CO2\" stroke=\"rgba(158, 82, 75, 1)\" fillOpacity={1} fill=\"url(#colorUv)\" />}\r\n\r\n                </AreaChart>\r\n            </ResponsiveContainer>\r\n\r\n        )\r\n    };\r\n}\r\n\r\nexport default AreaRechartComponent;","C:\\Users\\pbuch\\Documents\\Master\\SecondSemester\\MMI\\dnd\\src\\components\\ScrollToTop\\ScrollToTop.js",[],{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":2,"column":24,"nodeType":"223","messageId":"224","endLine":2,"endColumn":32},{"ruleId":"221","severity":1,"message":"225","line":2,"column":41,"nodeType":"223","messageId":"224","endLine":2,"endColumn":47},{"ruleId":"226","severity":1,"message":"227","line":204,"column":53,"nodeType":"228","messageId":"229","endLine":204,"endColumn":55},{"ruleId":"226","severity":1,"message":"227","line":208,"column":65,"nodeType":"228","messageId":"229","endLine":208,"endColumn":67},{"ruleId":"226","severity":1,"message":"227","line":237,"column":53,"nodeType":"228","messageId":"229","endLine":237,"endColumn":55},{"ruleId":"226","severity":1,"message":"227","line":240,"column":65,"nodeType":"228","messageId":"229","endLine":240,"endColumn":67},{"ruleId":"226","severity":1,"message":"230","line":327,"column":64,"nodeType":"228","messageId":"231","endLine":327,"endColumn":66},{"ruleId":"226","severity":1,"message":"227","line":332,"column":58,"nodeType":"228","messageId":"229","endLine":332,"endColumn":60},{"ruleId":"232","severity":1,"message":"233","line":333,"column":38,"nodeType":"234","messageId":"235","endLine":333,"endColumn":40},{"ruleId":"226","severity":1,"message":"227","line":340,"column":57,"nodeType":"228","messageId":"229","endLine":340,"endColumn":59},{"ruleId":"232","severity":1,"message":"233","line":341,"column":38,"nodeType":"234","messageId":"235","endLine":341,"endColumn":40},{"ruleId":"226","severity":1,"message":"230","line":368,"column":66,"nodeType":"228","messageId":"231","endLine":368,"endColumn":68},{"ruleId":"226","severity":1,"message":"227","line":373,"column":58,"nodeType":"228","messageId":"229","endLine":373,"endColumn":60},{"ruleId":"232","severity":1,"message":"233","line":374,"column":38,"nodeType":"234","messageId":"235","endLine":374,"endColumn":40},{"ruleId":"226","severity":1,"message":"227","line":381,"column":57,"nodeType":"228","messageId":"229","endLine":381,"endColumn":59},{"ruleId":"232","severity":1,"message":"233","line":382,"column":38,"nodeType":"234","messageId":"235","endLine":382,"endColumn":40},{"ruleId":"232","severity":1,"message":"236","line":392,"column":56,"nodeType":"234","messageId":"235","endLine":392,"endColumn":58},{"ruleId":"232","severity":1,"message":"236","line":392,"column":83,"nodeType":"234","messageId":"235","endLine":392,"endColumn":85},{"ruleId":"232","severity":1,"message":"236","line":393,"column":56,"nodeType":"234","messageId":"235","endLine":393,"endColumn":58},{"ruleId":"232","severity":1,"message":"236","line":393,"column":82,"nodeType":"234","messageId":"235","endLine":393,"endColumn":84},{"ruleId":"221","severity":1,"message":"237","line":2,"column":15,"nodeType":"223","messageId":"224","endLine":2,"endColumn":25},{"ruleId":"232","severity":1,"message":"236","line":35,"column":26,"nodeType":"234","messageId":"235","endLine":35,"endColumn":28},{"ruleId":"232","severity":1,"message":"236","line":40,"column":26,"nodeType":"234","messageId":"235","endLine":40,"endColumn":28},{"ruleId":"232","severity":1,"message":"236","line":45,"column":26,"nodeType":"234","messageId":"235","endLine":45,"endColumn":28},{"ruleId":"232","severity":1,"message":"233","line":54,"column":26,"nodeType":"234","messageId":"235","endLine":54,"endColumn":28},{"ruleId":"232","severity":1,"message":"233","line":30,"column":31,"nodeType":"234","messageId":"235","endLine":30,"endColumn":33},{"ruleId":"232","severity":1,"message":"236","line":6,"column":57,"nodeType":"234","messageId":"235","endLine":6,"endColumn":59},{"ruleId":"221","severity":1,"message":"238","line":5,"column":8,"nodeType":"223","messageId":"224","endLine":5,"endColumn":13},{"ruleId":"221","severity":1,"message":"238","line":7,"column":8,"nodeType":"223","messageId":"224","endLine":7,"endColumn":13},{"ruleId":"217","replacedBy":"239"},{"ruleId":"219","replacedBy":"240"},{"ruleId":"221","severity":1,"message":"222","line":2,"column":24,"nodeType":"223","messageId":"224","endLine":2,"endColumn":32},{"ruleId":"221","severity":1,"message":"225","line":2,"column":41,"nodeType":"223","messageId":"224","endLine":2,"endColumn":47},{"ruleId":"232","severity":1,"message":"236","line":6,"column":57,"nodeType":"234","messageId":"235","endLine":6,"endColumn":59},{"ruleId":"226","severity":1,"message":"227","line":204,"column":53,"nodeType":"228","messageId":"229","endLine":204,"endColumn":55},{"ruleId":"226","severity":1,"message":"227","line":208,"column":65,"nodeType":"228","messageId":"229","endLine":208,"endColumn":67},{"ruleId":"226","severity":1,"message":"227","line":237,"column":53,"nodeType":"228","messageId":"229","endLine":237,"endColumn":55},{"ruleId":"226","severity":1,"message":"227","line":240,"column":65,"nodeType":"228","messageId":"229","endLine":240,"endColumn":67},{"ruleId":"226","severity":1,"message":"230","line":327,"column":64,"nodeType":"228","messageId":"231","endLine":327,"endColumn":66},{"ruleId":"226","severity":1,"message":"227","line":332,"column":58,"nodeType":"228","messageId":"229","endLine":332,"endColumn":60},{"ruleId":"232","severity":1,"message":"233","line":333,"column":38,"nodeType":"234","messageId":"235","endLine":333,"endColumn":40},{"ruleId":"226","severity":1,"message":"227","line":340,"column":57,"nodeType":"228","messageId":"229","endLine":340,"endColumn":59},{"ruleId":"232","severity":1,"message":"233","line":341,"column":38,"nodeType":"234","messageId":"235","endLine":341,"endColumn":40},{"ruleId":"226","severity":1,"message":"230","line":368,"column":66,"nodeType":"228","messageId":"231","endLine":368,"endColumn":68},{"ruleId":"226","severity":1,"message":"227","line":373,"column":58,"nodeType":"228","messageId":"229","endLine":373,"endColumn":60},{"ruleId":"232","severity":1,"message":"233","line":374,"column":38,"nodeType":"234","messageId":"235","endLine":374,"endColumn":40},{"ruleId":"226","severity":1,"message":"227","line":381,"column":57,"nodeType":"228","messageId":"229","endLine":381,"endColumn":59},{"ruleId":"232","severity":1,"message":"233","line":382,"column":38,"nodeType":"234","messageId":"235","endLine":382,"endColumn":40},{"ruleId":"232","severity":1,"message":"236","line":392,"column":56,"nodeType":"234","messageId":"235","endLine":392,"endColumn":58},{"ruleId":"232","severity":1,"message":"236","line":392,"column":83,"nodeType":"234","messageId":"235","endLine":392,"endColumn":85},{"ruleId":"232","severity":1,"message":"236","line":393,"column":56,"nodeType":"234","messageId":"235","endLine":393,"endColumn":58},{"ruleId":"232","severity":1,"message":"236","line":393,"column":82,"nodeType":"234","messageId":"235","endLine":393,"endColumn":84},{"ruleId":"221","severity":1,"message":"237","line":2,"column":15,"nodeType":"223","messageId":"224","endLine":2,"endColumn":25},{"ruleId":"232","severity":1,"message":"236","line":35,"column":26,"nodeType":"234","messageId":"235","endLine":35,"endColumn":28},{"ruleId":"232","severity":1,"message":"236","line":40,"column":26,"nodeType":"234","messageId":"235","endLine":40,"endColumn":28},{"ruleId":"232","severity":1,"message":"236","line":45,"column":26,"nodeType":"234","messageId":"235","endLine":45,"endColumn":28},{"ruleId":"232","severity":1,"message":"233","line":54,"column":26,"nodeType":"234","messageId":"235","endLine":54,"endColumn":28},{"ruleId":"221","severity":1,"message":"241","line":1,"column":27,"nodeType":"223","messageId":"224","endLine":1,"endColumn":33},{"ruleId":"221","severity":1,"message":"242","line":2,"column":8,"nodeType":"223","messageId":"224","endLine":2,"endColumn":16},{"ruleId":"221","severity":1,"message":"243","line":26,"column":5,"nodeType":"223","messageId":"224","endLine":26,"endColumn":20},{"ruleId":"221","severity":1,"message":"244","line":27,"column":5,"nodeType":"223","messageId":"224","endLine":27,"endColumn":20},{"ruleId":"221","severity":1,"message":"245","line":28,"column":5,"nodeType":"223","messageId":"224","endLine":28,"endColumn":15},{"ruleId":"221","severity":1,"message":"246","line":29,"column":5,"nodeType":"223","messageId":"224","endLine":29,"endColumn":14},{"ruleId":"221","severity":1,"message":"247","line":95,"column":12,"nodeType":"223","messageId":"224","endLine":95,"endColumn":18},{"ruleId":"221","severity":1,"message":"248","line":95,"column":20,"nodeType":"223","messageId":"224","endLine":95,"endColumn":29},{"ruleId":"221","severity":1,"message":"243","line":101,"column":12,"nodeType":"223","messageId":"224","endLine":101,"endColumn":27},{"ruleId":"249","severity":1,"message":"250","line":120,"column":25,"nodeType":"251","messageId":"252","endLine":120,"endColumn":31},{"ruleId":"249","severity":1,"message":"250","line":120,"column":52,"nodeType":"251","messageId":"252","endLine":120,"endColumn":58},{"ruleId":"232","severity":1,"message":"233","line":134,"column":31,"nodeType":"234","messageId":"235","endLine":134,"endColumn":33},{"ruleId":"253","severity":1,"message":"254","line":145,"column":52,"nodeType":"234","messageId":"255","endLine":145,"endColumn":53},{"ruleId":"253","severity":1,"message":"254","line":153,"column":52,"nodeType":"234","messageId":"255","endLine":153,"endColumn":53},{"ruleId":"253","severity":1,"message":"254","line":160,"column":52,"nodeType":"234","messageId":"255","endLine":160,"endColumn":53},{"ruleId":"253","severity":1,"message":"254","line":167,"column":52,"nodeType":"234","messageId":"255","endLine":167,"endColumn":53},{"ruleId":"221","severity":1,"message":"256","line":179,"column":13,"nodeType":"223","messageId":"224","endLine":179,"endColumn":19},{"ruleId":"249","severity":1,"message":"250","line":180,"column":35,"nodeType":"251","messageId":"252","endLine":180,"endColumn":41},{"ruleId":"249","severity":1,"message":"250","line":180,"column":64,"nodeType":"251","messageId":"252","endLine":180,"endColumn":70},{"ruleId":"257","severity":1,"message":"258","line":192,"column":8,"nodeType":"259","endLine":192,"endColumn":27,"suggestions":"260"},{"ruleId":"221","severity":1,"message":"261","line":230,"column":14,"nodeType":"223","messageId":"224","endLine":230,"endColumn":27},{"ruleId":"221","severity":1,"message":"262","line":238,"column":14,"nodeType":"223","messageId":"224","endLine":238,"endColumn":22},{"ruleId":"263","severity":1,"message":"264","line":342,"column":45,"nodeType":"265","endLine":342,"endColumn":93},{"ruleId":"263","severity":1,"message":"264","line":371,"column":53,"nodeType":"265","endLine":371,"endColumn":93},{"ruleId":"263","severity":1,"message":"264","line":428,"column":45,"nodeType":"265","endLine":428,"endColumn":93},{"ruleId":"221","severity":1,"message":"238","line":5,"column":8,"nodeType":"223","messageId":"224","endLine":5,"endColumn":13},{"ruleId":"232","severity":1,"message":"233","line":30,"column":31,"nodeType":"234","messageId":"235","endLine":30,"endColumn":33},"no-native-reassign",["266"],"no-negated-in-lhs",["267"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'withRouter' is defined but never used.","'style' is defined but never used.",["266"],["267"],"'useRef' is defined but never used.","'ReactDOM' is defined but never used.","'diffXMousePoint' is assigned a value but never used.","'diffYMousePoint' is assigned a value but never used.","'FolderPath' is assigned a value but never used.","'startTime' is defined but never used.","'state2' is assigned a value but never used.","'setState2' is assigned a value but never used.","valid-typeof","Invalid typeof comparison value.","Literal","invalidValue","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'update' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'beforeLineBelongsF1', 'beforeLineBelongsF2', 'beforeLineBelongsF3', 'onDragEnd', 'sourceIndex', and 'state'. Either include them or remove the dependency array.","ArrayExpression",["268"],"'GuestGreeting' is defined but never used.","'Greeting' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"269","fix":"270"},"Update the dependencies array to be: [beforeLineBelongsF1, beforeLineBelongsF2, beforeLineBelongsF3, onDragEnd, sourceDroppableId, sourceIndex, state]",{"range":"271","text":"272"},[7766,7785],"[beforeLineBelongsF1, beforeLineBelongsF2, beforeLineBelongsF3, onDragEnd, sourceDroppableId, sourceIndex, state]"]